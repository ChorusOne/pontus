// Code generated - DO NOT EDIT.
// This file is a generated binding and any manual changes will be lost.

package binding

import (
	"math/big"
	"strings"

	ethereum "github.com/ethereum/go-ethereum"
	"github.com/ethereum/go-ethereum/accounts/abi"
	"github.com/ethereum/go-ethereum/accounts/abi/bind"
	"github.com/ethereum/go-ethereum/common"
	"github.com/ethereum/go-ethereum/core/types"
	"github.com/ethereum/go-ethereum/event"
)

// Reference imports to suppress errors if they are not otherwise used.
var (
	_ = big.NewInt
	_ = strings.NewReader
	_ = ethereum.NotFound
	_ = bind.Bind
	_ = common.Big1
	_ = types.BloomLookup
	_ = event.NewSubscription
)

// ValidatorServiceValidator is an auto generated low-level Go binding around an user-defined struct.
type ValidatorServiceValidator struct {
	Name                    string
	ValidatorAddress        common.Address
	RequestedAddress        common.Address
	Description             string
	FeeRate                 *big.Int
	RegistrationTime        *big.Int
	MinimumDelegationAmount *big.Int
	AcceptNewRequests       bool
}

// ValidatorServiceABI is the input ABI used to generate the binding from.
const ValidatorServiceABI = "[{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"validatorId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"nodeAddress\",\"type\":\"address\"}],\"name\":\"NodeAddressWasAdded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"validatorId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"nodeAddress\",\"type\":\"address\"}],\"name\":\"NodeAddressWasRemoved\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleGranted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleRevoked\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"validatorId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"newAddress\",\"type\":\"address\"}],\"name\":\"ValidatorAddressChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"validatorId\",\"type\":\"uint256\"}],\"name\":\"ValidatorRegistered\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"validatorId\",\"type\":\"uint256\"}],\"name\":\"ValidatorWasDisabled\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"validatorId\",\"type\":\"uint256\"}],\"name\":\"ValidatorWasEnabled\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"DEFAULT_ADMIN_ROLE\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"validatorAddress\",\"type\":\"address\"}],\"name\":\"checkIfValidatorAddressExists\",\"outputs\":[],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"validatorId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"checkMinimumDelegation\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"validatorAddress\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"validatorId\",\"type\":\"uint256\"}],\"name\":\"checkValidatorAddressToId\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"validatorId\",\"type\":\"uint256\"}],\"name\":\"confirmNewAddress\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"contractManager\",\"outputs\":[{\"internalType\":\"contractContractManager\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"validatorId\",\"type\":\"uint256\"}],\"name\":\"disableValidator\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"disableWhitelist\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"validatorId\",\"type\":\"uint256\"}],\"name\":\"enableValidator\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"validatorId\",\"type\":\"uint256\"}],\"name\":\"getAndUpdateBondAmount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getMyNodesAddresses\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"validatorId\",\"type\":\"uint256\"}],\"name\":\"getNodeAddresses\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"}],\"name\":\"getRoleAdmin\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"getRoleMember\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"}],\"name\":\"getRoleMemberCount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getTrustedValidators\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"validatorId\",\"type\":\"uint256\"}],\"name\":\"getValidator\",\"outputs\":[{\"components\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"address\",\"name\":\"validatorAddress\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"requestedAddress\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"description\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"feeRate\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"registrationTime\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"minimumDelegationAmount\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"acceptNewRequests\",\"type\":\"bool\"}],\"internalType\":\"structValidatorService.Validator\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"validatorAddress\",\"type\":\"address\"}],\"name\":\"getValidatorId\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"nodeAddress\",\"type\":\"address\"}],\"name\":\"getValidatorIdByNodeAddress\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"validatorId\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"grantRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"hasRole\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"contractManagerAddress\",\"type\":\"address\"}],\"name\":\"initialize\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"validatorId\",\"type\":\"uint256\"}],\"name\":\"isAcceptingNewRequests\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"validatorId\",\"type\":\"uint256\"}],\"name\":\"isAuthorizedValidator\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"nodeAddress\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"sig\",\"type\":\"bytes\"}],\"name\":\"linkNodeAddress\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"numberOfValidators\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"description\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"feeRate\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"minimumDelegationAmount\",\"type\":\"uint256\"}],\"name\":\"registerValidator\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"validatorId\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"renounceRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newValidatorAddress\",\"type\":\"address\"}],\"name\":\"requestForNewAddress\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"revokeRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"newDescription\",\"type\":\"string\"}],\"name\":\"setValidatorDescription\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"minimumDelegationAmount\",\"type\":\"uint256\"}],\"name\":\"setValidatorMDA\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"newName\",\"type\":\"string\"}],\"name\":\"setValidatorName\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"startAcceptingNewRequests\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"stopAcceptingNewRequests\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"trustedValidatorsList\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"nodeAddress\",\"type\":\"address\"}],\"name\":\"unlinkNodeAddress\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"useWhitelist\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"validatorAddress\",\"type\":\"address\"}],\"name\":\"validatorAddressExists\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"validatorId\",\"type\":\"uint256\"}],\"name\":\"validatorExists\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"validators\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"address\",\"name\":\"validatorAddress\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"requestedAddress\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"description\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"feeRate\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"registrationTime\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"minimumDelegationAmount\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"acceptNewRequests\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}]"

// ValidatorServiceBin is the compiled bytecode used for deploying new contracts.
var ValidatorServiceBin = "0x608060405234801561001057600080fd5b50613335806100206000396000f3fe608060405234801561001057600080fd5b50600436106102535760003560e01c806391d1485411610146578063ca8df720116100c3578063d6832ea911610087578063d6832ea914610527578063d6b0f4841461052f578063dff0769714610537578063e630025a1461054a578063ee7d3cad14610552578063f93c86f11461055a57610253565b8063ca8df720146104c6578063d2ae2c34146104d9578063d3f3872e146104f9578063d547741f14610501578063d55d6f4d1461051457610253565b8063bad217751161010a578063bad2177514610465578063bed5012e14610478578063c10c16eb1461048b578063c4d66de8146104a0578063ca15c873146104b357610253565b806391d148541461040f578063a217fddf14610422578063ab6f87841461042a578063b39e12cf1461043d578063b5d896271461044557610253565b8063549eb4bb116101d4578063790ac49b11610198578063790ac49b146103a3578063895d6019146103b65780638c34de7e146103c95780638f5683b3146103dc5780639010d07c146103ef57610253565b8063549eb4bb146103445780635be8c60f14610357578063665cdf8c1461036a57806370cb31891461037d57806374760abf1461039057610253565b80632f2ff15d1161021b5780632f2ff15d146102d157806331effd60146102e457806335aa2e44146102f757806336568abe1461031e578063365f6f271461033157610253565b806312220f8014610258578063174e6832146102815780632010ba31146102a1578063248a9ca3146102b657806328f89d7d146102c9575b600080fd5b61026b6102663660046125a3565b61056d565b6040516102789190612929565b60405180910390f35b61029461028f3660046125a3565b61058e565b604051610278919061286e565b6102b46102af3660046125a3565b6105b5565b005b6102946102c4366004612679565b610658565b6102b461066d565b6102b46102df366004612691565b6106ba565b6102946102f2366004612721565b610702565b61030a610305366004612679565b6108fc565b60405161027898979695949392919061297c565b6102b461032c366004612691565b610a68565b6102b461033f3660046125a3565b610aaa565b6102b4610352366004612679565b610afe565b61026b610365366004612679565b610c8f565b6102b46103783660046125a3565b610ca8565b61026b61038b3660046126c0565b610cd0565b6102b461039e3660046126e1565b610e2f565b6102b46103b1366004612679565b610e5f565b6102b46103c43660046125db565b610f57565b61026b6103d7366004612679565b611088565b6102b46103ea3660046126e1565b6110ca565b6104026103fd3660046126c0565b6110f1565b6040516102789190612877565b61026b61041d366004612691565b611116565b610294611134565b6102b4610438366004612679565b611139565b61040261115c565b610458610453366004612679565b61116b565b6040516102789190613229565b6102946104733660046125a3565b611330565b61026b61048636600461262e565b611366565b610493611387565b60405161027891906128f1565b6102b46104ae3660046125a3565b6113e0565b6102946104c1366004612679565b611479565b6102946104d4366004612679565b611490565b6104ec6104e7366004612679565b6115a1565b60405161027891906128a4565b6102b461160d565b6102b461050f366004612691565b61165e565b610294610522366004612679565b611698565b6102946116b6565b6102b46116bc565b6102b4610545366004612679565b6116ec565b61026b6117bc565b6104ec6117c5565b61026b610568366004612679565b6117d8565b6001600160a01b0381166000908152609b602052604090205415155b919050565b600061059982610ca8565b506001600160a01b03166000908152609b602052604090205490565b6001600160a01b0381166105e45760405162461bcd60e51b81526004016105db90612d03565b60405180910390fd5b6001600160a01b0381166000908152609b60205260409020541561061a5760405162461bcd60e51b81526004016105db90612c53565b60006106253361058e565b600090815260986020526040902060020180546001600160a01b0319166001600160a01b03939093169290921790915550565b60009081526065602052604090206002015490565b60006106783361058e565b905061068381611088565b61069f5760405162461bcd60e51b81526004016105db90612a1e565b6000908152609860205260409020600701805460ff19169055565b6000828152606560205260409020600201546106d89061041d611826565b6106f45760405162461bcd60e51b81526004016105db90612aa5565b6106fe828261182a565b5050565b600061070d3361056d565b1561072a5760405162461bcd60e51b81526004016105db90612b62565b6103e8831061074b5760405162461bcd60e51b81526004016105db90612f24565b50609e805460010190819055604080516101206020601f8a018190040282018101909252610100810188815290918291908a908a908190850183828082843760009201829052509385525050336020808501919091526040808501939093528251601f8a01829004820281018201909352888352606090930192899150889081908401838280828437600092018290525093855250505060208083018790524260408085019190915260608401879052600160809094019390935284825260988152919020825180519192610825928492909101906123fd565b506020828101516001830180546001600160a01b039283166001600160a01b03199182161790915560408501516002850180549190931691161790556060830151805161087892600385019201906123fd565b506080820151600482015560a0820151600582015560c0820151600682015560e0909101516007909101805460ff19169115159190911790556108bb8133611899565b7f4013ba65fee075e87ceec32f5b3568314dfcbe8b3aaeb445c76e77823b790c6f816040516108ea919061286e565b60405180910390a19695505050505050565b60986020908152600091825260409182902080548351601f600260001961010060018616150201909316929092049182018490048402810184019094528084529092918391908301828280156109935780601f1061096857610100808354040283529160200191610993565b820191906000526020600020905b81548152906001019060200180831161097657829003601f168201915b505050600180850154600280870154600388018054604080516020601f60001999851615610100029990990190931695909504968701829004820285018201905285845297986001600160a01b0394851698929094169650929450909290830182828015610a425780601f10610a1757610100808354040283529160200191610a42565b820191906000526020600020905b815481529060010190602001808311610a2557829003601f168201915b505050506004830154600584015460068501546007909501549394919390925060ff1688565b610a70611826565b6001600160a01b0316816001600160a01b031614610aa05760405162461bcd60e51b81526004016105db90613194565b6106fe8282611947565b6000610ab53361058e565b9050610ac181836119b6565b7fafa229b1d91fef1b7e952744b5504745de9616d7ef081a95b6abbf091a00e5f18183604051610af2929190612934565b60405180910390a15050565b80610b0881610c8f565b610b245760405162461bcd60e51b81526004016105db90613008565b610b2d33611b94565b610b495760405162461bcd60e51b81526004016105db90612fd8565b60008281526099602052604090205460ff16610b775760405162461bcd60e51b81526004016105db90612bac565b6000828152609960209081526040808320805460ff19169055609a8054825181850281018501909352808352610be193830182828015610bd657602002820191906000526020600020905b815481526020019060010190808311610bc2575b505050505084611d0f565b609a54909150811015610c3257609a8054610c0390600163ffffffff611d4f16565b81548110610c0d57fe5b9060005260206000200154609a8281548110610c2557fe5b6000918252602090912001555b609a805480610c3d57fe5b600190038181906000526020600020016000905590557fcf19fe3d2bddcf835796e65da48a848f1f55068c591e1739ce2f9a2037d86e1783604051610c82919061286e565b60405180910390a1505050565b6000609e548211158015610ca257508115155b92915050565b610cb18161056d565b610ccd5760405162461bcd60e51b81526004016105db90612d8a565b50565b600082610cdc81610c8f565b610cf85760405162461bcd60e51b81526004016105db90613008565b60408051808201825260148152732232b632b3b0ba34b7b721b7b73a3937b63632b960611b6020808301919091526097549251919233926001600160a01b039091169163ec56a37391610d4d918691016127f3565b604051602081830303815290604052805190602001206040518263ffffffff1660e01b8152600401610d7f919061286e565b60206040518083038186803b158015610d9757600080fd5b505afa158015610dab573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610dcf91906125bf565b6001600160a01b03161480610de75750610de7611d91565b610e035760405162461bcd60e51b81526004016105db9061309f565b600085815260986020526040902060060154841015610e23576000610e26565b60015b95945050505050565b6000610e3a3361058e565b6000818152609860205260409020909150610e5990600301848461247b565b50505050565b80610e6981610c8f565b610e855760405162461bcd60e51b81526004016105db90613008565b610e8e33611b94565b610eaa5760405162461bcd60e51b81526004016105db90612fd8565b60008281526099602052604090205460ff1615610ed95760405162461bcd60e51b81526004016105db90612ccc565b600082815260996020526040808220805460ff19166001908117909155609a805491820181559092527f44da158ba27f9252712a74ff6a55c5d531f69609f1f6e7f17c4443a8e2089be4909101839055517f35f72fa856b7982df44607525004d95014aa9153928eab40bb222857d021a21190610af290849061286e565b6000610f623361058e565b9050836001600160a01b0316610fe384848080601f01602080910402602001604051908101604052809392919081815260200183838082843760009201919091525050604051610fd79250610fbc9150869060200161286e565b60405160208183030381529060405280519060200120611d9d565b9063ffffffff611dcd16565b6001600160a01b0316146110095760405162461bcd60e51b81526004016105db906130d6565b6001600160a01b0384166000908152609b60205260409020541561103f5760405162461bcd60e51b81526004016105db90612fa1565b6110498185611efb565b7fa14268bedb4efdc41530188f4a7cbeb2df7644eba551d50504ca31c86fff7931818560405161107a929190612934565b60405180910390a150505050565b60008161109481610c8f565b6110b05760405162461bcd60e51b81526004016105db90613008565b505060009081526098602052604090206007015460ff1690565b60006110d53361058e565b6000818152609860205260409020909150610e5990848461247b565b600082815260656020526040812061110f908363ffffffff611fa016565b9392505050565b600082815260656020526040812061110f908363ffffffff611fac16565b600081565b60006111443361058e565b60009081526098602052604090206006019190915550565b6097546001600160a01b031681565b6111736124e9565b8161117d81610c8f565b6111995760405162461bcd60e51b81526004016105db90613008565b600083815260986020908152604091829020825181546002610100600183161581026000190190921604601f8101859004909402820161012090810190955281018381529093919284928491908401828280156112375780601f1061120c57610100808354040283529160200191611237565b820191906000526020600020905b81548152906001019060200180831161121a57829003601f168201915b50505091835250506001828101546001600160a01b0390811660208085019190915260028086015490921660408086019190915260038601805482516101009682161596909602600019011693909304601f8101839004830285018301909152808452606090940193908301828280156112f25780601f106112c7576101008083540402835291602001916112f2565b820191906000526020600020905b8154815290600101906020018083116112d557829003601f168201915b505050918352505060048201546020820152600582015460408201526006820154606082015260079091015460ff1615156080909101529392505050565b6001600160a01b0381166000908152609c6020526040902054806105895760405162461bcd60e51b81526004016105db90613105565b6000816113728461058e565b1461137e57600061110f565b50600192915050565b6060609a8054806020026020016040519081016040528092919081815260200182805480156113d557602002820191906000526020600020905b8154815260200190600101908083116113c1575b505050505090505b90565b600054610100900460ff16806113f957506113f9611fc1565b80611407575060005460ff16155b6114235760405162461bcd60e51b81526004016105db90612e94565b600054610100900460ff1615801561144e576000805460ff1961ff0019909116610100171660011790555b61145782611fc7565b609f805460ff1916600117905580156106fe576000805461ff00191690555050565b6000818152606560205260408120610ca290612066565b609754604051633581777360e01b815260009182916001600160a01b03909116906335817773906114c390600401612f73565b60206040518083038186803b1580156114db57600080fd5b505afa1580156114ef573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061151391906125bf565b9050806001600160a01b031663ff1f779961152d8561116b565b60200151856040518363ffffffff1660e01b815260040161154f92919061288b565b602060405180830381600087803b15801561156957600080fd5b505af115801561157d573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061110f919061279c565b6000818152609d602090815260409182902080548351818402810184019094528084526060939283018282801561160157602002820191906000526020600020905b81546001600160a01b031681526001909101906020018083116115e3575b50505050509050919050565b60006116183361058e565b905061162381611088565b156116405760405162461bcd60e51b81526004016105db90613150565b6000908152609860205260409020600701805460ff19166001179055565b60008281526065602052604090206002015461167c9061041d611826565b610aa05760405162461bcd60e51b81526004016105db90612d3a565b609a81815481106116a557fe5b600091825260209091200154905081565b609e5481565b6116c4611d91565b6116e05760405162461bcd60e51b81526004016105db90612af4565b609f805460ff19169055565b806116f681610c8f565b6117125760405162461bcd60e51b81526004016105db90613008565b3361171c8361116b565b604001516001600160a01b0316146117465760405162461bcd60e51b81526004016105db90612be3565b600082815260986020526040902060020180546001600160a01b031916905561176f8233611899565b600082815260986020526040908190206001015490517f9fe443dfd97eb75800b1e19c356677bca2625789663d07eed1c2c0dbe5488f3c91610af29185916001600160a01b031690612934565b609f5460ff1681565b60606117d36104e73361058e565b905090565b6000816117e481610c8f565b6118005760405162461bcd60e51b81526004016105db90613008565b60008381526099602052604090205460ff168061110f575050609f5460ff161592915050565b3390565b6000828152606560205260409020611848908263ffffffff61207116565b156106fe57611855611826565b6001600160a01b0316816001600160a01b0316837f2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d60405160405180910390a45050565b6001600160a01b0381166000908152609b60205260409020548214156118be576106fe565b6001600160a01b0381166000908152609b6020526040902054156118f45760405162461bcd60e51b81526004016105db90612dd5565b600082815260986020908152604080832060010180546001600160a01b039081168552609b8085528386208690559516808552609c845282852087905581546001600160a01b0319161790559290522055565b6000828152606560205260409020611965908263ffffffff61208616565b156106fe57611972611826565b6001600160a01b0316816001600160a01b0316837ff6391f5c32d9c69d2a47ea670b442974b53935d1edc7fd64eb21e047a839171b60405160405180910390a45050565b6001600160a01b0381166000908152609c602052604090205482146119ed5760405162461bcd60e51b81526004016105db9061304d565b6001600160a01b0381166000908152609c602052604081208190555b6000838152609d6020526040902054811015611b8f576000838152609d6020526040902080546001600160a01b038416919083908110611a4557fe5b6000918252602090912001546001600160a01b03161415611b87576000838152609d6020526040902054600182011015611b06576000838152609d602052604090208054611a9a90600163ffffffff611d4f16565b81548110611aa457fe5b6000918252602080832090910154858352609d909152604090912080546001600160a01b039092169183908110611ad757fe5b9060005260206000200160006101000a8154816001600160a01b0302191690836001600160a01b031602179055505b6000838152609d602052604090208054611b2790600163ffffffff611d4f16565b81548110611b3157fe5b6000918252602080832090910180546001600160a01b0319169055848252609d905260409020805480611b6057fe5b600082815260209020810160001990810180546001600160a01b0319169055019055611b8f565b600101611a09565b505050565b60975460405160009182916001600160a01b039091169063ec56a37390611bbd90602001612856565b604051602081830303815290604052805190602001206040518263ffffffff1660e01b8152600401611bef919061286e565b60206040518083038186803b158015611c0757600080fd5b505afa158015611c1b573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611c3f91906125bf565b90506001600160a01b03811615611cff576000819050806001600160a01b03166391d14854604051611c7090612840565b6040519081900381206001600160e01b031960e084901b168252611c98918890600401612934565b60206040518083038186803b158015611cb057600080fd5b505afa158015611cc4573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611ce89190612659565b80611cf65750611cf6611d91565b92505050610589565b611d07611d91565b915050610589565b6000805b8351811015611d465782848281518110611d2957fe5b60200260200101511415611d3e579050610ca2565b600101611d13565b50509051919050565b600061110f83836040518060400160405280601e81526020017f536166654d6174683a207375627472616374696f6e206f766572666c6f77000081525061209b565b60006117d38133611116565b600081604051602001611db0919061280f565b604051602081830303815290604052805190602001209050919050565b60008151604114611df05760405162461bcd60e51b81526004016105db90612b2b565b60208201516040830151606084015160001a7f7fffffffffffffffffffffffffffffff5d576e7357a4501ddfe92f46681b20a0821115611e425760405162461bcd60e51b81526004016105db90612c8a565b8060ff16601b14158015611e5a57508060ff16601c14155b15611e775760405162461bcd60e51b81526004016105db90612e1b565b600060018783868660405160008152602001604052604051611e9c949392919061294b565b6020604051602081039080840390855afa158015611ebe573d6000803e3d6000fd5b5050604051601f1901519150506001600160a01b038116611ef15760405162461bcd60e51b81526004016105db906129e7565b9695505050505050565b6001600160a01b0381166000908152609c6020526040902054821415611f20576106fe565b6001600160a01b0381166000908152609c602052604090205415611f565760405162461bcd60e51b81526004016105db906131e3565b6001600160a01b0381166000818152609c60209081526040808320869055858352609d82528220805460018101825590835291200180546001600160a01b03191690911790555050565b600061110f83836120c7565b600061110f836001600160a01b03841661210c565b303b1590565b600054610100900460ff1680611fe05750611fe0611fc1565b80611fee575060005460ff16155b61200a5760405162461bcd60e51b81526004016105db90612e94565b600054610100900460ff16158015612035576000805460ff1961ff0019909116610100171660011790555b61203d612124565b6120486000336106f4565b612051826121b6565b80156106fe576000805461ff00191690555050565b6000610ca28261222c565b600061110f836001600160a01b038416612230565b600061110f836001600160a01b03841661227a565b600081848411156120bf5760405162461bcd60e51b81526004016105db9190612969565b505050900390565b815460009082106120ea5760405162461bcd60e51b81526004016105db90612a63565b8260000182815481106120f957fe5b9060005260206000200154905092915050565b60009081526001919091016020526040902054151590565b600054610100900460ff168061213d575061213d611fc1565b8061214b575060005460ff16155b6121675760405162461bcd60e51b81526004016105db90612e94565b600054610100900460ff16158015612192576000805460ff1961ff0019909116610100171660011790555b61219a612340565b6121a2612340565b8015610ccd576000805461ff001916905550565b6001600160a01b0381166121dc5760405162461bcd60e51b81526004016105db90612ee2565b6121ee816001600160a01b03166123c1565b61220a5760405162461bcd60e51b81526004016105db90612e5d565b609780546001600160a01b0319166001600160a01b0392909216919091179055565b5490565b600061223c838361210c565b61227257508154600181810184556000848152602080822090930184905584548482528286019093526040902091909155610ca2565b506000610ca2565b6000818152600183016020526040812054801561233657835460001980830191908101906000908790839081106122ad57fe5b90600052602060002001549050808760000184815481106122ca57fe5b6000918252602080832090910192909255828152600189810190925260409020908401905586548790806122fa57fe5b60019003818190600052602060002001600090559055866001016000878152602001908152602001600020600090556001945050505050610ca2565b6000915050610ca2565b600054610100900460ff16806123595750612359611fc1565b80612367575060005460ff16155b6123835760405162461bcd60e51b81526004016105db90612e94565b600054610100900460ff161580156121a2576000805460ff1961ff0019909116610100171660011790558015610ccd576000805461ff001916905550565b6000813f7fc5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a4708181148015906123f557508115155b949350505050565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f1061243e57805160ff191683800117855561246b565b8280016001018555821561246b579182015b8281111561246b578251825591602001919060010190612450565b50612477929150612542565b5090565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f106124bc5782800160ff1982351617855561246b565b8280016001018555821561246b579182015b8281111561246b5782358255916020019190600101906124ce565b6040518061010001604052806060815260200160006001600160a01b0316815260200160006001600160a01b03168152602001606081526020016000815260200160008152602001600081526020016000151581525090565b6113dd91905b808211156124775760008155600101612548565b60008083601f84011261256d578182fd5b50813567ffffffffffffffff811115612584578182fd5b60208301915083602082850101111561259c57600080fd5b9250929050565b6000602082840312156125b4578081fd5b813561110f816132ea565b6000602082840312156125d0578081fd5b815161110f816132ea565b6000806000604084860312156125ef578182fd5b83356125fa816132ea565b9250602084013567ffffffffffffffff811115612615578283fd5b6126218682870161255c565b9497909650939450505050565b60008060408385031215612640578182fd5b823561264b816132ea565b946020939093013593505050565b60006020828403121561266a578081fd5b8151801515811461110f578182fd5b60006020828403121561268a578081fd5b5035919050565b600080604083850312156126a3578182fd5b8235915060208301356126b5816132ea565b809150509250929050565b600080604083850312156126d2578182fd5b50508035926020909101359150565b600080602083850312156126f3578182fd5b823567ffffffffffffffff811115612709578283fd5b6127158582860161255c565b90969095509350505050565b60008060008060008060808789031215612739578182fd5b863567ffffffffffffffff80821115612750578384fd5b61275c8a838b0161255c565b90985096506020890135915080821115612774578384fd5b5061278189828a0161255c565b979a9699509760408101359660609091013595509350505050565b6000602082840312156127ad578081fd5b5051919050565b6001600160a01b03169052565b15159052565b600081518084526127df8160208601602086016132be565b601f01601f19169290920160200192915050565b600082516128058184602087016132be565b9190910192915050565b7f19457468657265756d205369676e6564204d6573736167653a0a3332000000008152601c810191909152603c0190565b6941444d494e5f524f4c4560b01b8152600a0190565b6b29b5b0b632a6b0b730b3b2b960a11b8152600c0190565b90815260200190565b6001600160a01b0391909116815260200190565b6001600160a01b03929092168252602082015260400190565b6020808252825182820181905260009190848201906040850190845b818110156128e55783516001600160a01b0316835292840192918401916001016128c0565b50909695505050505050565b6020808252825182820181905260009190848201906040850190845b818110156128e55783518352928401929184019160010161290d565b901515815260200190565b9182526001600160a01b0316602082015260400190565b93845260ff9290921660208401526040830152606082015260800190565b60006020825261110f60208301846127c7565b60006101008083526129908184018c6127c7565b6001600160a01b038b811660208601528a81166040860152848203606086015291506129bc818a6127c7565b925050508560808301528460a08301528360c083015282151560e08301529998505050505050505050565b60208082526018908201527f45434453413a20696e76616c6964207369676e61747572650000000000000000604082015260600190565b60208082526025908201527f416363657074696e67207265717565737420697320616c72656164792064697360408201526418589b195960da1b606082015260800190565b60208082526022908201527f456e756d657261626c655365743a20696e646578206f7574206f6620626f756e604082015261647360f01b606082015260800190565b6020808252602f908201527f416363657373436f6e74726f6c3a2073656e646572206d75737420626520616e60408201526e0818591b5a5b881d1bc819dc985b9d608a1b606082015260800190565b60208082526017908201527f43616c6c6572206973206e6f7420746865206f776e6572000000000000000000604082015260600190565b6020808252601f908201527f45434453413a20696e76616c6964207369676e6174757265206c656e67746800604082015260600190565b6020808252602a908201527f56616c696461746f7220776974682073756368206164647265737320616c72656040820152696164792065786973747360b01b606082015260800190565b6020808252601d908201527f56616c696461746f7220697320616c72656164792064697361626c6564000000604082015260600190565b6020808252604a908201527f5468652076616c696461746f7220616464726573732063616e6e6f742062652060408201527f6368616e6765642062656361757365206974206973206e6f74207468652061636060820152693a3ab0b61037bbb732b960b11b608082015260a00190565b6020808252601a908201527f4164647265737320616c72656164792072656769737465726564000000000000604082015260600190565b60208082526022908201527f45434453413a20696e76616c6964207369676e6174757265202773272076616c604082015261756560f01b606082015260800190565b6020808252601c908201527f56616c696461746f7220697320616c726561647920656e61626c656400000000604082015260600190565b6020808252601a908201527f4e657720616464726573732063616e6e6f74206265206e756c6c000000000000604082015260600190565b60208082526030908201527f416363657373436f6e74726f6c3a2073656e646572206d75737420626520616e60408201526f2061646d696e20746f207265766f6b6560801b606082015260800190565b6020808252602b908201527f56616c696461746f72207769746820676976656e206164647265737320646f6560408201526a1cc81b9bdd08195e1a5cdd60aa1b606082015260800190565b60208082526026908201527f4164647265737320697320696e2075736520627920616e6f746865722076616c60408201526534b230ba37b960d11b606082015260800190565b60208082526022908201527f45434453413a20696e76616c6964207369676e6174757265202776272076616c604082015261756560f01b606082015260800190565b60208082526017908201527f41646472657373206973206e6f7420636f6e7472616374000000000000000000604082015260600190565b6020808252602e908201527f436f6e747261637420696e7374616e63652068617320616c726561647920626560408201526d195b881a5b9a5d1a585b1a5e995960921b606082015260800190565b60208082526022908201527f436f6e74726163744d616e616765722061646472657373206973206e6f742073604082015261195d60f21b606082015260800190565b6020808252602f908201527f4665652072617465206f662076616c696461746f722073686f756c642062652060408201526e6c6f776572207468616e203130302560881b606082015260800190565b6020808252601490820152732232b632b3b0ba34b7b721b7b73a3937b63632b960611b604082015260600190565b6020808252601b908201527f4e6f6465206164647265737320697320612076616c696461746f720000000000604082015260600190565b60208082526016908201527521b0b63632b91034b9903737ba1030b71030b236b4b760511b604082015260600190565b60208082526025908201527f56616c696461746f722077697468207375636820494420646f6573206e6f7420604082015264195e1a5cdd60da1b606082015260800190565b60208082526032908201527f56616c696461746f7220646f6573206e6f742068617665207065726d697373696040820152716f6e7320746f20756e6c696e6b206e6f646560701b606082015260800190565b60208082526019908201527f4d6573736167652073656e64657220697320696e76616c696400000000000000604082015260600190565b6020808252601590820152745369676e6174757265206973206e6f74207061737360581b604082015260600190565b6020808252602b908201527f4e6f64652061646472657373206973206e6f742061737369676e656420746f2060408201526a30903b30b634b230ba37b960a91b606082015260800190565b60208082526024908201527f416363657074696e67207265717565737420697320616c726561647920656e61604082015263189b195960e21b606082015260800190565b6020808252602f908201527f416363657373436f6e74726f6c3a2063616e206f6e6c792072656e6f756e636560408201526e103937b632b9903337b91039b2b63360891b606082015260800190565b60208082526026908201527f56616c696461746f722063616e6e6f74206f76657272696465206e6f6465206160408201526564647265737360d01b606082015260800190565b60006020825282516101008060208501526132486101208501836127c7565b6020860151925061325c60408601846127b4565b6040860151925061327060608601846127b4565b6060860151858203601f19016080870152925061328d81846127c7565b608087015160a087015260a087015160c087015260c087015160e087015260e08701519350611ef1838701856127c1565b60005b838110156132d95781810151838201526020016132c1565b83811115610e595750506000910152565b6001600160a01b0381168114610ccd57600080fdfea26469706673582212208e6d873903a15a9d4d18f4268b34f0ec4e36cc97242fa1ab11de61426e3628f864736f6c634300060a0033"

// DeployValidatorService deploys a new Ethereum contract, binding an instance of ValidatorService to it.
func DeployValidatorService(auth *bind.TransactOpts, backend bind.ContractBackend) (common.Address, *types.Transaction, *ValidatorService, error) {
	parsed, err := abi.JSON(strings.NewReader(ValidatorServiceABI))
	if err != nil {
		return common.Address{}, nil, nil, err
	}

	address, tx, contract, err := bind.DeployContract(auth, parsed, common.FromHex(ValidatorServiceBin), backend)
	if err != nil {
		return common.Address{}, nil, nil, err
	}
	return address, tx, &ValidatorService{ValidatorServiceCaller: ValidatorServiceCaller{contract: contract}, ValidatorServiceTransactor: ValidatorServiceTransactor{contract: contract}, ValidatorServiceFilterer: ValidatorServiceFilterer{contract: contract}}, nil
}

// ValidatorService is an auto generated Go binding around an Ethereum contract.
type ValidatorService struct {
	ValidatorServiceCaller     // Read-only binding to the contract
	ValidatorServiceTransactor // Write-only binding to the contract
	ValidatorServiceFilterer   // Log filterer for contract events
}

// ValidatorServiceCaller is an auto generated read-only Go binding around an Ethereum contract.
type ValidatorServiceCaller struct {
	contract *bind.BoundContract // Generic contract wrapper for the low level calls
}

// ValidatorServiceTransactor is an auto generated write-only Go binding around an Ethereum contract.
type ValidatorServiceTransactor struct {
	contract *bind.BoundContract // Generic contract wrapper for the low level calls
}

// ValidatorServiceFilterer is an auto generated log filtering Go binding around an Ethereum contract events.
type ValidatorServiceFilterer struct {
	contract *bind.BoundContract // Generic contract wrapper for the low level calls
}

// ValidatorServiceSession is an auto generated Go binding around an Ethereum contract,
// with pre-set call and transact options.
type ValidatorServiceSession struct {
	Contract     *ValidatorService // Generic contract binding to set the session for
	CallOpts     bind.CallOpts     // Call options to use throughout this session
	TransactOpts bind.TransactOpts // Transaction auth options to use throughout this session
}

// ValidatorServiceCallerSession is an auto generated read-only Go binding around an Ethereum contract,
// with pre-set call options.
type ValidatorServiceCallerSession struct {
	Contract *ValidatorServiceCaller // Generic contract caller binding to set the session for
	CallOpts bind.CallOpts           // Call options to use throughout this session
}

// ValidatorServiceTransactorSession is an auto generated write-only Go binding around an Ethereum contract,
// with pre-set transact options.
type ValidatorServiceTransactorSession struct {
	Contract     *ValidatorServiceTransactor // Generic contract transactor binding to set the session for
	TransactOpts bind.TransactOpts           // Transaction auth options to use throughout this session
}

// ValidatorServiceRaw is an auto generated low-level Go binding around an Ethereum contract.
type ValidatorServiceRaw struct {
	Contract *ValidatorService // Generic contract binding to access the raw methods on
}

// ValidatorServiceCallerRaw is an auto generated low-level read-only Go binding around an Ethereum contract.
type ValidatorServiceCallerRaw struct {
	Contract *ValidatorServiceCaller // Generic read-only contract binding to access the raw methods on
}

// ValidatorServiceTransactorRaw is an auto generated low-level write-only Go binding around an Ethereum contract.
type ValidatorServiceTransactorRaw struct {
	Contract *ValidatorServiceTransactor // Generic write-only contract binding to access the raw methods on
}

// NewValidatorService creates a new instance of ValidatorService, bound to a specific deployed contract.
func NewValidatorService(address common.Address, backend bind.ContractBackend) (*ValidatorService, error) {
	contract, err := bindValidatorService(address, backend, backend, backend)
	if err != nil {
		return nil, err
	}
	return &ValidatorService{ValidatorServiceCaller: ValidatorServiceCaller{contract: contract}, ValidatorServiceTransactor: ValidatorServiceTransactor{contract: contract}, ValidatorServiceFilterer: ValidatorServiceFilterer{contract: contract}}, nil
}

// NewValidatorServiceCaller creates a new read-only instance of ValidatorService, bound to a specific deployed contract.
func NewValidatorServiceCaller(address common.Address, caller bind.ContractCaller) (*ValidatorServiceCaller, error) {
	contract, err := bindValidatorService(address, caller, nil, nil)
	if err != nil {
		return nil, err
	}
	return &ValidatorServiceCaller{contract: contract}, nil
}

// NewValidatorServiceTransactor creates a new write-only instance of ValidatorService, bound to a specific deployed contract.
func NewValidatorServiceTransactor(address common.Address, transactor bind.ContractTransactor) (*ValidatorServiceTransactor, error) {
	contract, err := bindValidatorService(address, nil, transactor, nil)
	if err != nil {
		return nil, err
	}
	return &ValidatorServiceTransactor{contract: contract}, nil
}

// NewValidatorServiceFilterer creates a new log filterer instance of ValidatorService, bound to a specific deployed contract.
func NewValidatorServiceFilterer(address common.Address, filterer bind.ContractFilterer) (*ValidatorServiceFilterer, error) {
	contract, err := bindValidatorService(address, nil, nil, filterer)
	if err != nil {
		return nil, err
	}
	return &ValidatorServiceFilterer{contract: contract}, nil
}

// bindValidatorService binds a generic wrapper to an already deployed contract.
func bindValidatorService(address common.Address, caller bind.ContractCaller, transactor bind.ContractTransactor, filterer bind.ContractFilterer) (*bind.BoundContract, error) {
	parsed, err := abi.JSON(strings.NewReader(ValidatorServiceABI))
	if err != nil {
		return nil, err
	}
	return bind.NewBoundContract(address, parsed, caller, transactor, filterer), nil
}

// Call invokes the (constant) contract method with params as input values and
// sets the output to result. The result type might be a single field for simple
// returns, a slice of interfaces for anonymous returns and a struct for named
// returns.
func (_ValidatorService *ValidatorServiceRaw) Call(opts *bind.CallOpts, result interface{}, method string, params ...interface{}) error {
	return _ValidatorService.Contract.ValidatorServiceCaller.contract.Call(opts, result, method, params...)
}

// Transfer initiates a plain transaction to move funds to the contract, calling
// its default method if one is available.
func (_ValidatorService *ValidatorServiceRaw) Transfer(opts *bind.TransactOpts) (*types.Transaction, error) {
	return _ValidatorService.Contract.ValidatorServiceTransactor.contract.Transfer(opts)
}

// Transact invokes the (paid) contract method with params as input values.
func (_ValidatorService *ValidatorServiceRaw) Transact(opts *bind.TransactOpts, method string, params ...interface{}) (*types.Transaction, error) {
	return _ValidatorService.Contract.ValidatorServiceTransactor.contract.Transact(opts, method, params...)
}

// Call invokes the (constant) contract method with params as input values and
// sets the output to result. The result type might be a single field for simple
// returns, a slice of interfaces for anonymous returns and a struct for named
// returns.
func (_ValidatorService *ValidatorServiceCallerRaw) Call(opts *bind.CallOpts, result interface{}, method string, params ...interface{}) error {
	return _ValidatorService.Contract.contract.Call(opts, result, method, params...)
}

// Transfer initiates a plain transaction to move funds to the contract, calling
// its default method if one is available.
func (_ValidatorService *ValidatorServiceTransactorRaw) Transfer(opts *bind.TransactOpts) (*types.Transaction, error) {
	return _ValidatorService.Contract.contract.Transfer(opts)
}

// Transact invokes the (paid) contract method with params as input values.
func (_ValidatorService *ValidatorServiceTransactorRaw) Transact(opts *bind.TransactOpts, method string, params ...interface{}) (*types.Transaction, error) {
	return _ValidatorService.Contract.contract.Transact(opts, method, params...)
}

// DEFAULTADMINROLE is a free data retrieval call binding the contract method 0xa217fddf.
//
// Solidity: function DEFAULT_ADMIN_ROLE() view returns(bytes32)
func (_ValidatorService *ValidatorServiceCaller) DEFAULTADMINROLE(opts *bind.CallOpts) ([32]byte, error) {
	var (
		ret0 = new([32]byte)
	)
	out := ret0
	err := _ValidatorService.contract.Call(opts, out, "DEFAULT_ADMIN_ROLE")
	return *ret0, err
}

// DEFAULTADMINROLE is a free data retrieval call binding the contract method 0xa217fddf.
//
// Solidity: function DEFAULT_ADMIN_ROLE() view returns(bytes32)
func (_ValidatorService *ValidatorServiceSession) DEFAULTADMINROLE() ([32]byte, error) {
	return _ValidatorService.Contract.DEFAULTADMINROLE(&_ValidatorService.CallOpts)
}

// DEFAULTADMINROLE is a free data retrieval call binding the contract method 0xa217fddf.
//
// Solidity: function DEFAULT_ADMIN_ROLE() view returns(bytes32)
func (_ValidatorService *ValidatorServiceCallerSession) DEFAULTADMINROLE() ([32]byte, error) {
	return _ValidatorService.Contract.DEFAULTADMINROLE(&_ValidatorService.CallOpts)
}

// CheckIfValidatorAddressExists is a free data retrieval call binding the contract method 0x665cdf8c.
//
// Solidity: function checkIfValidatorAddressExists(address validatorAddress) view returns()
func (_ValidatorService *ValidatorServiceCaller) CheckIfValidatorAddressExists(opts *bind.CallOpts, validatorAddress common.Address) error {
	var ()
	out := &[]interface{}{}
	err := _ValidatorService.contract.Call(opts, out, "checkIfValidatorAddressExists", validatorAddress)
	return err
}

// CheckIfValidatorAddressExists is a free data retrieval call binding the contract method 0x665cdf8c.
//
// Solidity: function checkIfValidatorAddressExists(address validatorAddress) view returns()
func (_ValidatorService *ValidatorServiceSession) CheckIfValidatorAddressExists(validatorAddress common.Address) error {
	return _ValidatorService.Contract.CheckIfValidatorAddressExists(&_ValidatorService.CallOpts, validatorAddress)
}

// CheckIfValidatorAddressExists is a free data retrieval call binding the contract method 0x665cdf8c.
//
// Solidity: function checkIfValidatorAddressExists(address validatorAddress) view returns()
func (_ValidatorService *ValidatorServiceCallerSession) CheckIfValidatorAddressExists(validatorAddress common.Address) error {
	return _ValidatorService.Contract.CheckIfValidatorAddressExists(&_ValidatorService.CallOpts, validatorAddress)
}

// CheckMinimumDelegation is a free data retrieval call binding the contract method 0x70cb3189.
//
// Solidity: function checkMinimumDelegation(uint256 validatorId, uint256 amount) view returns(bool)
func (_ValidatorService *ValidatorServiceCaller) CheckMinimumDelegation(opts *bind.CallOpts, validatorId *big.Int, amount *big.Int) (bool, error) {
	var (
		ret0 = new(bool)
	)
	out := ret0
	err := _ValidatorService.contract.Call(opts, out, "checkMinimumDelegation", validatorId, amount)
	return *ret0, err
}

// CheckMinimumDelegation is a free data retrieval call binding the contract method 0x70cb3189.
//
// Solidity: function checkMinimumDelegation(uint256 validatorId, uint256 amount) view returns(bool)
func (_ValidatorService *ValidatorServiceSession) CheckMinimumDelegation(validatorId *big.Int, amount *big.Int) (bool, error) {
	return _ValidatorService.Contract.CheckMinimumDelegation(&_ValidatorService.CallOpts, validatorId, amount)
}

// CheckMinimumDelegation is a free data retrieval call binding the contract method 0x70cb3189.
//
// Solidity: function checkMinimumDelegation(uint256 validatorId, uint256 amount) view returns(bool)
func (_ValidatorService *ValidatorServiceCallerSession) CheckMinimumDelegation(validatorId *big.Int, amount *big.Int) (bool, error) {
	return _ValidatorService.Contract.CheckMinimumDelegation(&_ValidatorService.CallOpts, validatorId, amount)
}

// CheckValidatorAddressToId is a free data retrieval call binding the contract method 0xbed5012e.
//
// Solidity: function checkValidatorAddressToId(address validatorAddress, uint256 validatorId) view returns(bool)
func (_ValidatorService *ValidatorServiceCaller) CheckValidatorAddressToId(opts *bind.CallOpts, validatorAddress common.Address, validatorId *big.Int) (bool, error) {
	var (
		ret0 = new(bool)
	)
	out := ret0
	err := _ValidatorService.contract.Call(opts, out, "checkValidatorAddressToId", validatorAddress, validatorId)
	return *ret0, err
}

// CheckValidatorAddressToId is a free data retrieval call binding the contract method 0xbed5012e.
//
// Solidity: function checkValidatorAddressToId(address validatorAddress, uint256 validatorId) view returns(bool)
func (_ValidatorService *ValidatorServiceSession) CheckValidatorAddressToId(validatorAddress common.Address, validatorId *big.Int) (bool, error) {
	return _ValidatorService.Contract.CheckValidatorAddressToId(&_ValidatorService.CallOpts, validatorAddress, validatorId)
}

// CheckValidatorAddressToId is a free data retrieval call binding the contract method 0xbed5012e.
//
// Solidity: function checkValidatorAddressToId(address validatorAddress, uint256 validatorId) view returns(bool)
func (_ValidatorService *ValidatorServiceCallerSession) CheckValidatorAddressToId(validatorAddress common.Address, validatorId *big.Int) (bool, error) {
	return _ValidatorService.Contract.CheckValidatorAddressToId(&_ValidatorService.CallOpts, validatorAddress, validatorId)
}

// ContractManager is a free data retrieval call binding the contract method 0xb39e12cf.
//
// Solidity: function contractManager() view returns(address)
func (_ValidatorService *ValidatorServiceCaller) ContractManager(opts *bind.CallOpts) (common.Address, error) {
	var (
		ret0 = new(common.Address)
	)
	out := ret0
	err := _ValidatorService.contract.Call(opts, out, "contractManager")
	return *ret0, err
}

// ContractManager is a free data retrieval call binding the contract method 0xb39e12cf.
//
// Solidity: function contractManager() view returns(address)
func (_ValidatorService *ValidatorServiceSession) ContractManager() (common.Address, error) {
	return _ValidatorService.Contract.ContractManager(&_ValidatorService.CallOpts)
}

// ContractManager is a free data retrieval call binding the contract method 0xb39e12cf.
//
// Solidity: function contractManager() view returns(address)
func (_ValidatorService *ValidatorServiceCallerSession) ContractManager() (common.Address, error) {
	return _ValidatorService.Contract.ContractManager(&_ValidatorService.CallOpts)
}

// GetMyNodesAddresses is a free data retrieval call binding the contract method 0xee7d3cad.
//
// Solidity: function getMyNodesAddresses() view returns(address[])
func (_ValidatorService *ValidatorServiceCaller) GetMyNodesAddresses(opts *bind.CallOpts) ([]common.Address, error) {
	var (
		ret0 = new([]common.Address)
	)
	out := ret0
	err := _ValidatorService.contract.Call(opts, out, "getMyNodesAddresses")
	return *ret0, err
}

// GetMyNodesAddresses is a free data retrieval call binding the contract method 0xee7d3cad.
//
// Solidity: function getMyNodesAddresses() view returns(address[])
func (_ValidatorService *ValidatorServiceSession) GetMyNodesAddresses() ([]common.Address, error) {
	return _ValidatorService.Contract.GetMyNodesAddresses(&_ValidatorService.CallOpts)
}

// GetMyNodesAddresses is a free data retrieval call binding the contract method 0xee7d3cad.
//
// Solidity: function getMyNodesAddresses() view returns(address[])
func (_ValidatorService *ValidatorServiceCallerSession) GetMyNodesAddresses() ([]common.Address, error) {
	return _ValidatorService.Contract.GetMyNodesAddresses(&_ValidatorService.CallOpts)
}

// GetNodeAddresses is a free data retrieval call binding the contract method 0xd2ae2c34.
//
// Solidity: function getNodeAddresses(uint256 validatorId) view returns(address[])
func (_ValidatorService *ValidatorServiceCaller) GetNodeAddresses(opts *bind.CallOpts, validatorId *big.Int) ([]common.Address, error) {
	var (
		ret0 = new([]common.Address)
	)
	out := ret0
	err := _ValidatorService.contract.Call(opts, out, "getNodeAddresses", validatorId)
	return *ret0, err
}

// GetNodeAddresses is a free data retrieval call binding the contract method 0xd2ae2c34.
//
// Solidity: function getNodeAddresses(uint256 validatorId) view returns(address[])
func (_ValidatorService *ValidatorServiceSession) GetNodeAddresses(validatorId *big.Int) ([]common.Address, error) {
	return _ValidatorService.Contract.GetNodeAddresses(&_ValidatorService.CallOpts, validatorId)
}

// GetNodeAddresses is a free data retrieval call binding the contract method 0xd2ae2c34.
//
// Solidity: function getNodeAddresses(uint256 validatorId) view returns(address[])
func (_ValidatorService *ValidatorServiceCallerSession) GetNodeAddresses(validatorId *big.Int) ([]common.Address, error) {
	return _ValidatorService.Contract.GetNodeAddresses(&_ValidatorService.CallOpts, validatorId)
}

// GetRoleAdmin is a free data retrieval call binding the contract method 0x248a9ca3.
//
// Solidity: function getRoleAdmin(bytes32 role) view returns(bytes32)
func (_ValidatorService *ValidatorServiceCaller) GetRoleAdmin(opts *bind.CallOpts, role [32]byte) ([32]byte, error) {
	var (
		ret0 = new([32]byte)
	)
	out := ret0
	err := _ValidatorService.contract.Call(opts, out, "getRoleAdmin", role)
	return *ret0, err
}

// GetRoleAdmin is a free data retrieval call binding the contract method 0x248a9ca3.
//
// Solidity: function getRoleAdmin(bytes32 role) view returns(bytes32)
func (_ValidatorService *ValidatorServiceSession) GetRoleAdmin(role [32]byte) ([32]byte, error) {
	return _ValidatorService.Contract.GetRoleAdmin(&_ValidatorService.CallOpts, role)
}

// GetRoleAdmin is a free data retrieval call binding the contract method 0x248a9ca3.
//
// Solidity: function getRoleAdmin(bytes32 role) view returns(bytes32)
func (_ValidatorService *ValidatorServiceCallerSession) GetRoleAdmin(role [32]byte) ([32]byte, error) {
	return _ValidatorService.Contract.GetRoleAdmin(&_ValidatorService.CallOpts, role)
}

// GetRoleMember is a free data retrieval call binding the contract method 0x9010d07c.
//
// Solidity: function getRoleMember(bytes32 role, uint256 index) view returns(address)
func (_ValidatorService *ValidatorServiceCaller) GetRoleMember(opts *bind.CallOpts, role [32]byte, index *big.Int) (common.Address, error) {
	var (
		ret0 = new(common.Address)
	)
	out := ret0
	err := _ValidatorService.contract.Call(opts, out, "getRoleMember", role, index)
	return *ret0, err
}

// GetRoleMember is a free data retrieval call binding the contract method 0x9010d07c.
//
// Solidity: function getRoleMember(bytes32 role, uint256 index) view returns(address)
func (_ValidatorService *ValidatorServiceSession) GetRoleMember(role [32]byte, index *big.Int) (common.Address, error) {
	return _ValidatorService.Contract.GetRoleMember(&_ValidatorService.CallOpts, role, index)
}

// GetRoleMember is a free data retrieval call binding the contract method 0x9010d07c.
//
// Solidity: function getRoleMember(bytes32 role, uint256 index) view returns(address)
func (_ValidatorService *ValidatorServiceCallerSession) GetRoleMember(role [32]byte, index *big.Int) (common.Address, error) {
	return _ValidatorService.Contract.GetRoleMember(&_ValidatorService.CallOpts, role, index)
}

// GetRoleMemberCount is a free data retrieval call binding the contract method 0xca15c873.
//
// Solidity: function getRoleMemberCount(bytes32 role) view returns(uint256)
func (_ValidatorService *ValidatorServiceCaller) GetRoleMemberCount(opts *bind.CallOpts, role [32]byte) (*big.Int, error) {
	var (
		ret0 = new(*big.Int)
	)
	out := ret0
	err := _ValidatorService.contract.Call(opts, out, "getRoleMemberCount", role)
	return *ret0, err
}

// GetRoleMemberCount is a free data retrieval call binding the contract method 0xca15c873.
//
// Solidity: function getRoleMemberCount(bytes32 role) view returns(uint256)
func (_ValidatorService *ValidatorServiceSession) GetRoleMemberCount(role [32]byte) (*big.Int, error) {
	return _ValidatorService.Contract.GetRoleMemberCount(&_ValidatorService.CallOpts, role)
}

// GetRoleMemberCount is a free data retrieval call binding the contract method 0xca15c873.
//
// Solidity: function getRoleMemberCount(bytes32 role) view returns(uint256)
func (_ValidatorService *ValidatorServiceCallerSession) GetRoleMemberCount(role [32]byte) (*big.Int, error) {
	return _ValidatorService.Contract.GetRoleMemberCount(&_ValidatorService.CallOpts, role)
}

// GetTrustedValidators is a free data retrieval call binding the contract method 0xc10c16eb.
//
// Solidity: function getTrustedValidators() view returns(uint256[])
func (_ValidatorService *ValidatorServiceCaller) GetTrustedValidators(opts *bind.CallOpts) ([]*big.Int, error) {
	var (
		ret0 = new([]*big.Int)
	)
	out := ret0
	err := _ValidatorService.contract.Call(opts, out, "getTrustedValidators")
	return *ret0, err
}

// GetTrustedValidators is a free data retrieval call binding the contract method 0xc10c16eb.
//
// Solidity: function getTrustedValidators() view returns(uint256[])
func (_ValidatorService *ValidatorServiceSession) GetTrustedValidators() ([]*big.Int, error) {
	return _ValidatorService.Contract.GetTrustedValidators(&_ValidatorService.CallOpts)
}

// GetTrustedValidators is a free data retrieval call binding the contract method 0xc10c16eb.
//
// Solidity: function getTrustedValidators() view returns(uint256[])
func (_ValidatorService *ValidatorServiceCallerSession) GetTrustedValidators() ([]*big.Int, error) {
	return _ValidatorService.Contract.GetTrustedValidators(&_ValidatorService.CallOpts)
}

// GetValidator is a free data retrieval call binding the contract method 0xb5d89627.
//
// Solidity: function getValidator(uint256 validatorId) view returns((string,address,address,string,uint256,uint256,uint256,bool))
func (_ValidatorService *ValidatorServiceCaller) GetValidator(opts *bind.CallOpts, validatorId *big.Int) (ValidatorServiceValidator, error) {
	var (
		ret0 = new(ValidatorServiceValidator)
	)
	out := ret0
	err := _ValidatorService.contract.Call(opts, out, "getValidator", validatorId)
	return *ret0, err
}

// GetValidator is a free data retrieval call binding the contract method 0xb5d89627.
//
// Solidity: function getValidator(uint256 validatorId) view returns((string,address,address,string,uint256,uint256,uint256,bool))
func (_ValidatorService *ValidatorServiceSession) GetValidator(validatorId *big.Int) (ValidatorServiceValidator, error) {
	return _ValidatorService.Contract.GetValidator(&_ValidatorService.CallOpts, validatorId)
}

// GetValidator is a free data retrieval call binding the contract method 0xb5d89627.
//
// Solidity: function getValidator(uint256 validatorId) view returns((string,address,address,string,uint256,uint256,uint256,bool))
func (_ValidatorService *ValidatorServiceCallerSession) GetValidator(validatorId *big.Int) (ValidatorServiceValidator, error) {
	return _ValidatorService.Contract.GetValidator(&_ValidatorService.CallOpts, validatorId)
}

// GetValidatorId is a free data retrieval call binding the contract method 0x174e6832.
//
// Solidity: function getValidatorId(address validatorAddress) view returns(uint256)
func (_ValidatorService *ValidatorServiceCaller) GetValidatorId(opts *bind.CallOpts, validatorAddress common.Address) (*big.Int, error) {
	var (
		ret0 = new(*big.Int)
	)
	out := ret0
	err := _ValidatorService.contract.Call(opts, out, "getValidatorId", validatorAddress)
	return *ret0, err
}

// GetValidatorId is a free data retrieval call binding the contract method 0x174e6832.
//
// Solidity: function getValidatorId(address validatorAddress) view returns(uint256)
func (_ValidatorService *ValidatorServiceSession) GetValidatorId(validatorAddress common.Address) (*big.Int, error) {
	return _ValidatorService.Contract.GetValidatorId(&_ValidatorService.CallOpts, validatorAddress)
}

// GetValidatorId is a free data retrieval call binding the contract method 0x174e6832.
//
// Solidity: function getValidatorId(address validatorAddress) view returns(uint256)
func (_ValidatorService *ValidatorServiceCallerSession) GetValidatorId(validatorAddress common.Address) (*big.Int, error) {
	return _ValidatorService.Contract.GetValidatorId(&_ValidatorService.CallOpts, validatorAddress)
}

// GetValidatorIdByNodeAddress is a free data retrieval call binding the contract method 0xbad21775.
//
// Solidity: function getValidatorIdByNodeAddress(address nodeAddress) view returns(uint256 validatorId)
func (_ValidatorService *ValidatorServiceCaller) GetValidatorIdByNodeAddress(opts *bind.CallOpts, nodeAddress common.Address) (*big.Int, error) {
	var (
		ret0 = new(*big.Int)
	)
	out := ret0
	err := _ValidatorService.contract.Call(opts, out, "getValidatorIdByNodeAddress", nodeAddress)
	return *ret0, err
}

// GetValidatorIdByNodeAddress is a free data retrieval call binding the contract method 0xbad21775.
//
// Solidity: function getValidatorIdByNodeAddress(address nodeAddress) view returns(uint256 validatorId)
func (_ValidatorService *ValidatorServiceSession) GetValidatorIdByNodeAddress(nodeAddress common.Address) (*big.Int, error) {
	return _ValidatorService.Contract.GetValidatorIdByNodeAddress(&_ValidatorService.CallOpts, nodeAddress)
}

// GetValidatorIdByNodeAddress is a free data retrieval call binding the contract method 0xbad21775.
//
// Solidity: function getValidatorIdByNodeAddress(address nodeAddress) view returns(uint256 validatorId)
func (_ValidatorService *ValidatorServiceCallerSession) GetValidatorIdByNodeAddress(nodeAddress common.Address) (*big.Int, error) {
	return _ValidatorService.Contract.GetValidatorIdByNodeAddress(&_ValidatorService.CallOpts, nodeAddress)
}

// HasRole is a free data retrieval call binding the contract method 0x91d14854.
//
// Solidity: function hasRole(bytes32 role, address account) view returns(bool)
func (_ValidatorService *ValidatorServiceCaller) HasRole(opts *bind.CallOpts, role [32]byte, account common.Address) (bool, error) {
	var (
		ret0 = new(bool)
	)
	out := ret0
	err := _ValidatorService.contract.Call(opts, out, "hasRole", role, account)
	return *ret0, err
}

// HasRole is a free data retrieval call binding the contract method 0x91d14854.
//
// Solidity: function hasRole(bytes32 role, address account) view returns(bool)
func (_ValidatorService *ValidatorServiceSession) HasRole(role [32]byte, account common.Address) (bool, error) {
	return _ValidatorService.Contract.HasRole(&_ValidatorService.CallOpts, role, account)
}

// HasRole is a free data retrieval call binding the contract method 0x91d14854.
//
// Solidity: function hasRole(bytes32 role, address account) view returns(bool)
func (_ValidatorService *ValidatorServiceCallerSession) HasRole(role [32]byte, account common.Address) (bool, error) {
	return _ValidatorService.Contract.HasRole(&_ValidatorService.CallOpts, role, account)
}

// IsAcceptingNewRequests is a free data retrieval call binding the contract method 0x8c34de7e.
//
// Solidity: function isAcceptingNewRequests(uint256 validatorId) view returns(bool)
func (_ValidatorService *ValidatorServiceCaller) IsAcceptingNewRequests(opts *bind.CallOpts, validatorId *big.Int) (bool, error) {
	var (
		ret0 = new(bool)
	)
	out := ret0
	err := _ValidatorService.contract.Call(opts, out, "isAcceptingNewRequests", validatorId)
	return *ret0, err
}

// IsAcceptingNewRequests is a free data retrieval call binding the contract method 0x8c34de7e.
//
// Solidity: function isAcceptingNewRequests(uint256 validatorId) view returns(bool)
func (_ValidatorService *ValidatorServiceSession) IsAcceptingNewRequests(validatorId *big.Int) (bool, error) {
	return _ValidatorService.Contract.IsAcceptingNewRequests(&_ValidatorService.CallOpts, validatorId)
}

// IsAcceptingNewRequests is a free data retrieval call binding the contract method 0x8c34de7e.
//
// Solidity: function isAcceptingNewRequests(uint256 validatorId) view returns(bool)
func (_ValidatorService *ValidatorServiceCallerSession) IsAcceptingNewRequests(validatorId *big.Int) (bool, error) {
	return _ValidatorService.Contract.IsAcceptingNewRequests(&_ValidatorService.CallOpts, validatorId)
}

// IsAuthorizedValidator is a free data retrieval call binding the contract method 0xf93c86f1.
//
// Solidity: function isAuthorizedValidator(uint256 validatorId) view returns(bool)
func (_ValidatorService *ValidatorServiceCaller) IsAuthorizedValidator(opts *bind.CallOpts, validatorId *big.Int) (bool, error) {
	var (
		ret0 = new(bool)
	)
	out := ret0
	err := _ValidatorService.contract.Call(opts, out, "isAuthorizedValidator", validatorId)
	return *ret0, err
}

// IsAuthorizedValidator is a free data retrieval call binding the contract method 0xf93c86f1.
//
// Solidity: function isAuthorizedValidator(uint256 validatorId) view returns(bool)
func (_ValidatorService *ValidatorServiceSession) IsAuthorizedValidator(validatorId *big.Int) (bool, error) {
	return _ValidatorService.Contract.IsAuthorizedValidator(&_ValidatorService.CallOpts, validatorId)
}

// IsAuthorizedValidator is a free data retrieval call binding the contract method 0xf93c86f1.
//
// Solidity: function isAuthorizedValidator(uint256 validatorId) view returns(bool)
func (_ValidatorService *ValidatorServiceCallerSession) IsAuthorizedValidator(validatorId *big.Int) (bool, error) {
	return _ValidatorService.Contract.IsAuthorizedValidator(&_ValidatorService.CallOpts, validatorId)
}

// NumberOfValidators is a free data retrieval call binding the contract method 0xd6832ea9.
//
// Solidity: function numberOfValidators() view returns(uint256)
func (_ValidatorService *ValidatorServiceCaller) NumberOfValidators(opts *bind.CallOpts) (*big.Int, error) {
	var (
		ret0 = new(*big.Int)
	)
	out := ret0
	err := _ValidatorService.contract.Call(opts, out, "numberOfValidators")
	return *ret0, err
}

// NumberOfValidators is a free data retrieval call binding the contract method 0xd6832ea9.
//
// Solidity: function numberOfValidators() view returns(uint256)
func (_ValidatorService *ValidatorServiceSession) NumberOfValidators() (*big.Int, error) {
	return _ValidatorService.Contract.NumberOfValidators(&_ValidatorService.CallOpts)
}

// NumberOfValidators is a free data retrieval call binding the contract method 0xd6832ea9.
//
// Solidity: function numberOfValidators() view returns(uint256)
func (_ValidatorService *ValidatorServiceCallerSession) NumberOfValidators() (*big.Int, error) {
	return _ValidatorService.Contract.NumberOfValidators(&_ValidatorService.CallOpts)
}

// TrustedValidatorsList is a free data retrieval call binding the contract method 0xd55d6f4d.
//
// Solidity: function trustedValidatorsList(uint256 ) view returns(uint256)
func (_ValidatorService *ValidatorServiceCaller) TrustedValidatorsList(opts *bind.CallOpts, arg0 *big.Int) (*big.Int, error) {
	var (
		ret0 = new(*big.Int)
	)
	out := ret0
	err := _ValidatorService.contract.Call(opts, out, "trustedValidatorsList", arg0)
	return *ret0, err
}

// TrustedValidatorsList is a free data retrieval call binding the contract method 0xd55d6f4d.
//
// Solidity: function trustedValidatorsList(uint256 ) view returns(uint256)
func (_ValidatorService *ValidatorServiceSession) TrustedValidatorsList(arg0 *big.Int) (*big.Int, error) {
	return _ValidatorService.Contract.TrustedValidatorsList(&_ValidatorService.CallOpts, arg0)
}

// TrustedValidatorsList is a free data retrieval call binding the contract method 0xd55d6f4d.
//
// Solidity: function trustedValidatorsList(uint256 ) view returns(uint256)
func (_ValidatorService *ValidatorServiceCallerSession) TrustedValidatorsList(arg0 *big.Int) (*big.Int, error) {
	return _ValidatorService.Contract.TrustedValidatorsList(&_ValidatorService.CallOpts, arg0)
}

// UseWhitelist is a free data retrieval call binding the contract method 0xe630025a.
//
// Solidity: function useWhitelist() view returns(bool)
func (_ValidatorService *ValidatorServiceCaller) UseWhitelist(opts *bind.CallOpts) (bool, error) {
	var (
		ret0 = new(bool)
	)
	out := ret0
	err := _ValidatorService.contract.Call(opts, out, "useWhitelist")
	return *ret0, err
}

// UseWhitelist is a free data retrieval call binding the contract method 0xe630025a.
//
// Solidity: function useWhitelist() view returns(bool)
func (_ValidatorService *ValidatorServiceSession) UseWhitelist() (bool, error) {
	return _ValidatorService.Contract.UseWhitelist(&_ValidatorService.CallOpts)
}

// UseWhitelist is a free data retrieval call binding the contract method 0xe630025a.
//
// Solidity: function useWhitelist() view returns(bool)
func (_ValidatorService *ValidatorServiceCallerSession) UseWhitelist() (bool, error) {
	return _ValidatorService.Contract.UseWhitelist(&_ValidatorService.CallOpts)
}

// ValidatorAddressExists is a free data retrieval call binding the contract method 0x12220f80.
//
// Solidity: function validatorAddressExists(address validatorAddress) view returns(bool)
func (_ValidatorService *ValidatorServiceCaller) ValidatorAddressExists(opts *bind.CallOpts, validatorAddress common.Address) (bool, error) {
	var (
		ret0 = new(bool)
	)
	out := ret0
	err := _ValidatorService.contract.Call(opts, out, "validatorAddressExists", validatorAddress)
	return *ret0, err
}

// ValidatorAddressExists is a free data retrieval call binding the contract method 0x12220f80.
//
// Solidity: function validatorAddressExists(address validatorAddress) view returns(bool)
func (_ValidatorService *ValidatorServiceSession) ValidatorAddressExists(validatorAddress common.Address) (bool, error) {
	return _ValidatorService.Contract.ValidatorAddressExists(&_ValidatorService.CallOpts, validatorAddress)
}

// ValidatorAddressExists is a free data retrieval call binding the contract method 0x12220f80.
//
// Solidity: function validatorAddressExists(address validatorAddress) view returns(bool)
func (_ValidatorService *ValidatorServiceCallerSession) ValidatorAddressExists(validatorAddress common.Address) (bool, error) {
	return _ValidatorService.Contract.ValidatorAddressExists(&_ValidatorService.CallOpts, validatorAddress)
}

// ValidatorExists is a free data retrieval call binding the contract method 0x5be8c60f.
//
// Solidity: function validatorExists(uint256 validatorId) view returns(bool)
func (_ValidatorService *ValidatorServiceCaller) ValidatorExists(opts *bind.CallOpts, validatorId *big.Int) (bool, error) {
	var (
		ret0 = new(bool)
	)
	out := ret0
	err := _ValidatorService.contract.Call(opts, out, "validatorExists", validatorId)
	return *ret0, err
}

// ValidatorExists is a free data retrieval call binding the contract method 0x5be8c60f.
//
// Solidity: function validatorExists(uint256 validatorId) view returns(bool)
func (_ValidatorService *ValidatorServiceSession) ValidatorExists(validatorId *big.Int) (bool, error) {
	return _ValidatorService.Contract.ValidatorExists(&_ValidatorService.CallOpts, validatorId)
}

// ValidatorExists is a free data retrieval call binding the contract method 0x5be8c60f.
//
// Solidity: function validatorExists(uint256 validatorId) view returns(bool)
func (_ValidatorService *ValidatorServiceCallerSession) ValidatorExists(validatorId *big.Int) (bool, error) {
	return _ValidatorService.Contract.ValidatorExists(&_ValidatorService.CallOpts, validatorId)
}

// Validators is a free data retrieval call binding the contract method 0x35aa2e44.
//
// Solidity: function validators(uint256 ) view returns(string name, address validatorAddress, address requestedAddress, string description, uint256 feeRate, uint256 registrationTime, uint256 minimumDelegationAmount, bool acceptNewRequests)
func (_ValidatorService *ValidatorServiceCaller) Validators(opts *bind.CallOpts, arg0 *big.Int) (struct {
	Name                    string
	ValidatorAddress        common.Address
	RequestedAddress        common.Address
	Description             string
	FeeRate                 *big.Int
	RegistrationTime        *big.Int
	MinimumDelegationAmount *big.Int
	AcceptNewRequests       bool
}, error) {
	ret := new(struct {
		Name                    string
		ValidatorAddress        common.Address
		RequestedAddress        common.Address
		Description             string
		FeeRate                 *big.Int
		RegistrationTime        *big.Int
		MinimumDelegationAmount *big.Int
		AcceptNewRequests       bool
	})
	out := ret
	err := _ValidatorService.contract.Call(opts, out, "validators", arg0)
	return *ret, err
}

// Validators is a free data retrieval call binding the contract method 0x35aa2e44.
//
// Solidity: function validators(uint256 ) view returns(string name, address validatorAddress, address requestedAddress, string description, uint256 feeRate, uint256 registrationTime, uint256 minimumDelegationAmount, bool acceptNewRequests)
func (_ValidatorService *ValidatorServiceSession) Validators(arg0 *big.Int) (struct {
	Name                    string
	ValidatorAddress        common.Address
	RequestedAddress        common.Address
	Description             string
	FeeRate                 *big.Int
	RegistrationTime        *big.Int
	MinimumDelegationAmount *big.Int
	AcceptNewRequests       bool
}, error) {
	return _ValidatorService.Contract.Validators(&_ValidatorService.CallOpts, arg0)
}

// Validators is a free data retrieval call binding the contract method 0x35aa2e44.
//
// Solidity: function validators(uint256 ) view returns(string name, address validatorAddress, address requestedAddress, string description, uint256 feeRate, uint256 registrationTime, uint256 minimumDelegationAmount, bool acceptNewRequests)
func (_ValidatorService *ValidatorServiceCallerSession) Validators(arg0 *big.Int) (struct {
	Name                    string
	ValidatorAddress        common.Address
	RequestedAddress        common.Address
	Description             string
	FeeRate                 *big.Int
	RegistrationTime        *big.Int
	MinimumDelegationAmount *big.Int
	AcceptNewRequests       bool
}, error) {
	return _ValidatorService.Contract.Validators(&_ValidatorService.CallOpts, arg0)
}

// ConfirmNewAddress is a paid mutator transaction binding the contract method 0xdff07697.
//
// Solidity: function confirmNewAddress(uint256 validatorId) returns()
func (_ValidatorService *ValidatorServiceTransactor) ConfirmNewAddress(opts *bind.TransactOpts, validatorId *big.Int) (*types.Transaction, error) {
	return _ValidatorService.contract.Transact(opts, "confirmNewAddress", validatorId)
}

// ConfirmNewAddress is a paid mutator transaction binding the contract method 0xdff07697.
//
// Solidity: function confirmNewAddress(uint256 validatorId) returns()
func (_ValidatorService *ValidatorServiceSession) ConfirmNewAddress(validatorId *big.Int) (*types.Transaction, error) {
	return _ValidatorService.Contract.ConfirmNewAddress(&_ValidatorService.TransactOpts, validatorId)
}

// ConfirmNewAddress is a paid mutator transaction binding the contract method 0xdff07697.
//
// Solidity: function confirmNewAddress(uint256 validatorId) returns()
func (_ValidatorService *ValidatorServiceTransactorSession) ConfirmNewAddress(validatorId *big.Int) (*types.Transaction, error) {
	return _ValidatorService.Contract.ConfirmNewAddress(&_ValidatorService.TransactOpts, validatorId)
}

// DisableValidator is a paid mutator transaction binding the contract method 0x549eb4bb.
//
// Solidity: function disableValidator(uint256 validatorId) returns()
func (_ValidatorService *ValidatorServiceTransactor) DisableValidator(opts *bind.TransactOpts, validatorId *big.Int) (*types.Transaction, error) {
	return _ValidatorService.contract.Transact(opts, "disableValidator", validatorId)
}

// DisableValidator is a paid mutator transaction binding the contract method 0x549eb4bb.
//
// Solidity: function disableValidator(uint256 validatorId) returns()
func (_ValidatorService *ValidatorServiceSession) DisableValidator(validatorId *big.Int) (*types.Transaction, error) {
	return _ValidatorService.Contract.DisableValidator(&_ValidatorService.TransactOpts, validatorId)
}

// DisableValidator is a paid mutator transaction binding the contract method 0x549eb4bb.
//
// Solidity: function disableValidator(uint256 validatorId) returns()
func (_ValidatorService *ValidatorServiceTransactorSession) DisableValidator(validatorId *big.Int) (*types.Transaction, error) {
	return _ValidatorService.Contract.DisableValidator(&_ValidatorService.TransactOpts, validatorId)
}

// DisableWhitelist is a paid mutator transaction binding the contract method 0xd6b0f484.
//
// Solidity: function disableWhitelist() returns()
func (_ValidatorService *ValidatorServiceTransactor) DisableWhitelist(opts *bind.TransactOpts) (*types.Transaction, error) {
	return _ValidatorService.contract.Transact(opts, "disableWhitelist")
}

// DisableWhitelist is a paid mutator transaction binding the contract method 0xd6b0f484.
//
// Solidity: function disableWhitelist() returns()
func (_ValidatorService *ValidatorServiceSession) DisableWhitelist() (*types.Transaction, error) {
	return _ValidatorService.Contract.DisableWhitelist(&_ValidatorService.TransactOpts)
}

// DisableWhitelist is a paid mutator transaction binding the contract method 0xd6b0f484.
//
// Solidity: function disableWhitelist() returns()
func (_ValidatorService *ValidatorServiceTransactorSession) DisableWhitelist() (*types.Transaction, error) {
	return _ValidatorService.Contract.DisableWhitelist(&_ValidatorService.TransactOpts)
}

// EnableValidator is a paid mutator transaction binding the contract method 0x790ac49b.
//
// Solidity: function enableValidator(uint256 validatorId) returns()
func (_ValidatorService *ValidatorServiceTransactor) EnableValidator(opts *bind.TransactOpts, validatorId *big.Int) (*types.Transaction, error) {
	return _ValidatorService.contract.Transact(opts, "enableValidator", validatorId)
}

// EnableValidator is a paid mutator transaction binding the contract method 0x790ac49b.
//
// Solidity: function enableValidator(uint256 validatorId) returns()
func (_ValidatorService *ValidatorServiceSession) EnableValidator(validatorId *big.Int) (*types.Transaction, error) {
	return _ValidatorService.Contract.EnableValidator(&_ValidatorService.TransactOpts, validatorId)
}

// EnableValidator is a paid mutator transaction binding the contract method 0x790ac49b.
//
// Solidity: function enableValidator(uint256 validatorId) returns()
func (_ValidatorService *ValidatorServiceTransactorSession) EnableValidator(validatorId *big.Int) (*types.Transaction, error) {
	return _ValidatorService.Contract.EnableValidator(&_ValidatorService.TransactOpts, validatorId)
}

// GetAndUpdateBondAmount is a paid mutator transaction binding the contract method 0xca8df720.
//
// Solidity: function getAndUpdateBondAmount(uint256 validatorId) returns(uint256)
func (_ValidatorService *ValidatorServiceTransactor) GetAndUpdateBondAmount(opts *bind.TransactOpts, validatorId *big.Int) (*types.Transaction, error) {
	return _ValidatorService.contract.Transact(opts, "getAndUpdateBondAmount", validatorId)
}

// GetAndUpdateBondAmount is a paid mutator transaction binding the contract method 0xca8df720.
//
// Solidity: function getAndUpdateBondAmount(uint256 validatorId) returns(uint256)
func (_ValidatorService *ValidatorServiceSession) GetAndUpdateBondAmount(validatorId *big.Int) (*types.Transaction, error) {
	return _ValidatorService.Contract.GetAndUpdateBondAmount(&_ValidatorService.TransactOpts, validatorId)
}

// GetAndUpdateBondAmount is a paid mutator transaction binding the contract method 0xca8df720.
//
// Solidity: function getAndUpdateBondAmount(uint256 validatorId) returns(uint256)
func (_ValidatorService *ValidatorServiceTransactorSession) GetAndUpdateBondAmount(validatorId *big.Int) (*types.Transaction, error) {
	return _ValidatorService.Contract.GetAndUpdateBondAmount(&_ValidatorService.TransactOpts, validatorId)
}

// GrantRole is a paid mutator transaction binding the contract method 0x2f2ff15d.
//
// Solidity: function grantRole(bytes32 role, address account) returns()
func (_ValidatorService *ValidatorServiceTransactor) GrantRole(opts *bind.TransactOpts, role [32]byte, account common.Address) (*types.Transaction, error) {
	return _ValidatorService.contract.Transact(opts, "grantRole", role, account)
}

// GrantRole is a paid mutator transaction binding the contract method 0x2f2ff15d.
//
// Solidity: function grantRole(bytes32 role, address account) returns()
func (_ValidatorService *ValidatorServiceSession) GrantRole(role [32]byte, account common.Address) (*types.Transaction, error) {
	return _ValidatorService.Contract.GrantRole(&_ValidatorService.TransactOpts, role, account)
}

// GrantRole is a paid mutator transaction binding the contract method 0x2f2ff15d.
//
// Solidity: function grantRole(bytes32 role, address account) returns()
func (_ValidatorService *ValidatorServiceTransactorSession) GrantRole(role [32]byte, account common.Address) (*types.Transaction, error) {
	return _ValidatorService.Contract.GrantRole(&_ValidatorService.TransactOpts, role, account)
}

// Initialize is a paid mutator transaction binding the contract method 0xc4d66de8.
//
// Solidity: function initialize(address contractManagerAddress) returns()
func (_ValidatorService *ValidatorServiceTransactor) Initialize(opts *bind.TransactOpts, contractManagerAddress common.Address) (*types.Transaction, error) {
	return _ValidatorService.contract.Transact(opts, "initialize", contractManagerAddress)
}

// Initialize is a paid mutator transaction binding the contract method 0xc4d66de8.
//
// Solidity: function initialize(address contractManagerAddress) returns()
func (_ValidatorService *ValidatorServiceSession) Initialize(contractManagerAddress common.Address) (*types.Transaction, error) {
	return _ValidatorService.Contract.Initialize(&_ValidatorService.TransactOpts, contractManagerAddress)
}

// Initialize is a paid mutator transaction binding the contract method 0xc4d66de8.
//
// Solidity: function initialize(address contractManagerAddress) returns()
func (_ValidatorService *ValidatorServiceTransactorSession) Initialize(contractManagerAddress common.Address) (*types.Transaction, error) {
	return _ValidatorService.Contract.Initialize(&_ValidatorService.TransactOpts, contractManagerAddress)
}

// LinkNodeAddress is a paid mutator transaction binding the contract method 0x895d6019.
//
// Solidity: function linkNodeAddress(address nodeAddress, bytes sig) returns()
func (_ValidatorService *ValidatorServiceTransactor) LinkNodeAddress(opts *bind.TransactOpts, nodeAddress common.Address, sig []byte) (*types.Transaction, error) {
	return _ValidatorService.contract.Transact(opts, "linkNodeAddress", nodeAddress, sig)
}

// LinkNodeAddress is a paid mutator transaction binding the contract method 0x895d6019.
//
// Solidity: function linkNodeAddress(address nodeAddress, bytes sig) returns()
func (_ValidatorService *ValidatorServiceSession) LinkNodeAddress(nodeAddress common.Address, sig []byte) (*types.Transaction, error) {
	return _ValidatorService.Contract.LinkNodeAddress(&_ValidatorService.TransactOpts, nodeAddress, sig)
}

// LinkNodeAddress is a paid mutator transaction binding the contract method 0x895d6019.
//
// Solidity: function linkNodeAddress(address nodeAddress, bytes sig) returns()
func (_ValidatorService *ValidatorServiceTransactorSession) LinkNodeAddress(nodeAddress common.Address, sig []byte) (*types.Transaction, error) {
	return _ValidatorService.Contract.LinkNodeAddress(&_ValidatorService.TransactOpts, nodeAddress, sig)
}

// RegisterValidator is a paid mutator transaction binding the contract method 0x31effd60.
//
// Solidity: function registerValidator(string name, string description, uint256 feeRate, uint256 minimumDelegationAmount) returns(uint256 validatorId)
func (_ValidatorService *ValidatorServiceTransactor) RegisterValidator(opts *bind.TransactOpts, name string, description string, feeRate *big.Int, minimumDelegationAmount *big.Int) (*types.Transaction, error) {
	return _ValidatorService.contract.Transact(opts, "registerValidator", name, description, feeRate, minimumDelegationAmount)
}

// RegisterValidator is a paid mutator transaction binding the contract method 0x31effd60.
//
// Solidity: function registerValidator(string name, string description, uint256 feeRate, uint256 minimumDelegationAmount) returns(uint256 validatorId)
func (_ValidatorService *ValidatorServiceSession) RegisterValidator(name string, description string, feeRate *big.Int, minimumDelegationAmount *big.Int) (*types.Transaction, error) {
	return _ValidatorService.Contract.RegisterValidator(&_ValidatorService.TransactOpts, name, description, feeRate, minimumDelegationAmount)
}

// RegisterValidator is a paid mutator transaction binding the contract method 0x31effd60.
//
// Solidity: function registerValidator(string name, string description, uint256 feeRate, uint256 minimumDelegationAmount) returns(uint256 validatorId)
func (_ValidatorService *ValidatorServiceTransactorSession) RegisterValidator(name string, description string, feeRate *big.Int, minimumDelegationAmount *big.Int) (*types.Transaction, error) {
	return _ValidatorService.Contract.RegisterValidator(&_ValidatorService.TransactOpts, name, description, feeRate, minimumDelegationAmount)
}

// RenounceRole is a paid mutator transaction binding the contract method 0x36568abe.
//
// Solidity: function renounceRole(bytes32 role, address account) returns()
func (_ValidatorService *ValidatorServiceTransactor) RenounceRole(opts *bind.TransactOpts, role [32]byte, account common.Address) (*types.Transaction, error) {
	return _ValidatorService.contract.Transact(opts, "renounceRole", role, account)
}

// RenounceRole is a paid mutator transaction binding the contract method 0x36568abe.
//
// Solidity: function renounceRole(bytes32 role, address account) returns()
func (_ValidatorService *ValidatorServiceSession) RenounceRole(role [32]byte, account common.Address) (*types.Transaction, error) {
	return _ValidatorService.Contract.RenounceRole(&_ValidatorService.TransactOpts, role, account)
}

// RenounceRole is a paid mutator transaction binding the contract method 0x36568abe.
//
// Solidity: function renounceRole(bytes32 role, address account) returns()
func (_ValidatorService *ValidatorServiceTransactorSession) RenounceRole(role [32]byte, account common.Address) (*types.Transaction, error) {
	return _ValidatorService.Contract.RenounceRole(&_ValidatorService.TransactOpts, role, account)
}

// RequestForNewAddress is a paid mutator transaction binding the contract method 0x2010ba31.
//
// Solidity: function requestForNewAddress(address newValidatorAddress) returns()
func (_ValidatorService *ValidatorServiceTransactor) RequestForNewAddress(opts *bind.TransactOpts, newValidatorAddress common.Address) (*types.Transaction, error) {
	return _ValidatorService.contract.Transact(opts, "requestForNewAddress", newValidatorAddress)
}

// RequestForNewAddress is a paid mutator transaction binding the contract method 0x2010ba31.
//
// Solidity: function requestForNewAddress(address newValidatorAddress) returns()
func (_ValidatorService *ValidatorServiceSession) RequestForNewAddress(newValidatorAddress common.Address) (*types.Transaction, error) {
	return _ValidatorService.Contract.RequestForNewAddress(&_ValidatorService.TransactOpts, newValidatorAddress)
}

// RequestForNewAddress is a paid mutator transaction binding the contract method 0x2010ba31.
//
// Solidity: function requestForNewAddress(address newValidatorAddress) returns()
func (_ValidatorService *ValidatorServiceTransactorSession) RequestForNewAddress(newValidatorAddress common.Address) (*types.Transaction, error) {
	return _ValidatorService.Contract.RequestForNewAddress(&_ValidatorService.TransactOpts, newValidatorAddress)
}

// RevokeRole is a paid mutator transaction binding the contract method 0xd547741f.
//
// Solidity: function revokeRole(bytes32 role, address account) returns()
func (_ValidatorService *ValidatorServiceTransactor) RevokeRole(opts *bind.TransactOpts, role [32]byte, account common.Address) (*types.Transaction, error) {
	return _ValidatorService.contract.Transact(opts, "revokeRole", role, account)
}

// RevokeRole is a paid mutator transaction binding the contract method 0xd547741f.
//
// Solidity: function revokeRole(bytes32 role, address account) returns()
func (_ValidatorService *ValidatorServiceSession) RevokeRole(role [32]byte, account common.Address) (*types.Transaction, error) {
	return _ValidatorService.Contract.RevokeRole(&_ValidatorService.TransactOpts, role, account)
}

// RevokeRole is a paid mutator transaction binding the contract method 0xd547741f.
//
// Solidity: function revokeRole(bytes32 role, address account) returns()
func (_ValidatorService *ValidatorServiceTransactorSession) RevokeRole(role [32]byte, account common.Address) (*types.Transaction, error) {
	return _ValidatorService.Contract.RevokeRole(&_ValidatorService.TransactOpts, role, account)
}

// SetValidatorDescription is a paid mutator transaction binding the contract method 0x74760abf.
//
// Solidity: function setValidatorDescription(string newDescription) returns()
func (_ValidatorService *ValidatorServiceTransactor) SetValidatorDescription(opts *bind.TransactOpts, newDescription string) (*types.Transaction, error) {
	return _ValidatorService.contract.Transact(opts, "setValidatorDescription", newDescription)
}

// SetValidatorDescription is a paid mutator transaction binding the contract method 0x74760abf.
//
// Solidity: function setValidatorDescription(string newDescription) returns()
func (_ValidatorService *ValidatorServiceSession) SetValidatorDescription(newDescription string) (*types.Transaction, error) {
	return _ValidatorService.Contract.SetValidatorDescription(&_ValidatorService.TransactOpts, newDescription)
}

// SetValidatorDescription is a paid mutator transaction binding the contract method 0x74760abf.
//
// Solidity: function setValidatorDescription(string newDescription) returns()
func (_ValidatorService *ValidatorServiceTransactorSession) SetValidatorDescription(newDescription string) (*types.Transaction, error) {
	return _ValidatorService.Contract.SetValidatorDescription(&_ValidatorService.TransactOpts, newDescription)
}

// SetValidatorMDA is a paid mutator transaction binding the contract method 0xab6f8784.
//
// Solidity: function setValidatorMDA(uint256 minimumDelegationAmount) returns()
func (_ValidatorService *ValidatorServiceTransactor) SetValidatorMDA(opts *bind.TransactOpts, minimumDelegationAmount *big.Int) (*types.Transaction, error) {
	return _ValidatorService.contract.Transact(opts, "setValidatorMDA", minimumDelegationAmount)
}

// SetValidatorMDA is a paid mutator transaction binding the contract method 0xab6f8784.
//
// Solidity: function setValidatorMDA(uint256 minimumDelegationAmount) returns()
func (_ValidatorService *ValidatorServiceSession) SetValidatorMDA(minimumDelegationAmount *big.Int) (*types.Transaction, error) {
	return _ValidatorService.Contract.SetValidatorMDA(&_ValidatorService.TransactOpts, minimumDelegationAmount)
}

// SetValidatorMDA is a paid mutator transaction binding the contract method 0xab6f8784.
//
// Solidity: function setValidatorMDA(uint256 minimumDelegationAmount) returns()
func (_ValidatorService *ValidatorServiceTransactorSession) SetValidatorMDA(minimumDelegationAmount *big.Int) (*types.Transaction, error) {
	return _ValidatorService.Contract.SetValidatorMDA(&_ValidatorService.TransactOpts, minimumDelegationAmount)
}

// SetValidatorName is a paid mutator transaction binding the contract method 0x8f5683b3.
//
// Solidity: function setValidatorName(string newName) returns()
func (_ValidatorService *ValidatorServiceTransactor) SetValidatorName(opts *bind.TransactOpts, newName string) (*types.Transaction, error) {
	return _ValidatorService.contract.Transact(opts, "setValidatorName", newName)
}

// SetValidatorName is a paid mutator transaction binding the contract method 0x8f5683b3.
//
// Solidity: function setValidatorName(string newName) returns()
func (_ValidatorService *ValidatorServiceSession) SetValidatorName(newName string) (*types.Transaction, error) {
	return _ValidatorService.Contract.SetValidatorName(&_ValidatorService.TransactOpts, newName)
}

// SetValidatorName is a paid mutator transaction binding the contract method 0x8f5683b3.
//
// Solidity: function setValidatorName(string newName) returns()
func (_ValidatorService *ValidatorServiceTransactorSession) SetValidatorName(newName string) (*types.Transaction, error) {
	return _ValidatorService.Contract.SetValidatorName(&_ValidatorService.TransactOpts, newName)
}

// StartAcceptingNewRequests is a paid mutator transaction binding the contract method 0xd3f3872e.
//
// Solidity: function startAcceptingNewRequests() returns()
func (_ValidatorService *ValidatorServiceTransactor) StartAcceptingNewRequests(opts *bind.TransactOpts) (*types.Transaction, error) {
	return _ValidatorService.contract.Transact(opts, "startAcceptingNewRequests")
}

// StartAcceptingNewRequests is a paid mutator transaction binding the contract method 0xd3f3872e.
//
// Solidity: function startAcceptingNewRequests() returns()
func (_ValidatorService *ValidatorServiceSession) StartAcceptingNewRequests() (*types.Transaction, error) {
	return _ValidatorService.Contract.StartAcceptingNewRequests(&_ValidatorService.TransactOpts)
}

// StartAcceptingNewRequests is a paid mutator transaction binding the contract method 0xd3f3872e.
//
// Solidity: function startAcceptingNewRequests() returns()
func (_ValidatorService *ValidatorServiceTransactorSession) StartAcceptingNewRequests() (*types.Transaction, error) {
	return _ValidatorService.Contract.StartAcceptingNewRequests(&_ValidatorService.TransactOpts)
}

// StopAcceptingNewRequests is a paid mutator transaction binding the contract method 0x28f89d7d.
//
// Solidity: function stopAcceptingNewRequests() returns()
func (_ValidatorService *ValidatorServiceTransactor) StopAcceptingNewRequests(opts *bind.TransactOpts) (*types.Transaction, error) {
	return _ValidatorService.contract.Transact(opts, "stopAcceptingNewRequests")
}

// StopAcceptingNewRequests is a paid mutator transaction binding the contract method 0x28f89d7d.
//
// Solidity: function stopAcceptingNewRequests() returns()
func (_ValidatorService *ValidatorServiceSession) StopAcceptingNewRequests() (*types.Transaction, error) {
	return _ValidatorService.Contract.StopAcceptingNewRequests(&_ValidatorService.TransactOpts)
}

// StopAcceptingNewRequests is a paid mutator transaction binding the contract method 0x28f89d7d.
//
// Solidity: function stopAcceptingNewRequests() returns()
func (_ValidatorService *ValidatorServiceTransactorSession) StopAcceptingNewRequests() (*types.Transaction, error) {
	return _ValidatorService.Contract.StopAcceptingNewRequests(&_ValidatorService.TransactOpts)
}

// UnlinkNodeAddress is a paid mutator transaction binding the contract method 0x365f6f27.
//
// Solidity: function unlinkNodeAddress(address nodeAddress) returns()
func (_ValidatorService *ValidatorServiceTransactor) UnlinkNodeAddress(opts *bind.TransactOpts, nodeAddress common.Address) (*types.Transaction, error) {
	return _ValidatorService.contract.Transact(opts, "unlinkNodeAddress", nodeAddress)
}

// UnlinkNodeAddress is a paid mutator transaction binding the contract method 0x365f6f27.
//
// Solidity: function unlinkNodeAddress(address nodeAddress) returns()
func (_ValidatorService *ValidatorServiceSession) UnlinkNodeAddress(nodeAddress common.Address) (*types.Transaction, error) {
	return _ValidatorService.Contract.UnlinkNodeAddress(&_ValidatorService.TransactOpts, nodeAddress)
}

// UnlinkNodeAddress is a paid mutator transaction binding the contract method 0x365f6f27.
//
// Solidity: function unlinkNodeAddress(address nodeAddress) returns()
func (_ValidatorService *ValidatorServiceTransactorSession) UnlinkNodeAddress(nodeAddress common.Address) (*types.Transaction, error) {
	return _ValidatorService.Contract.UnlinkNodeAddress(&_ValidatorService.TransactOpts, nodeAddress)
}

// ValidatorServiceNodeAddressWasAddedIterator is returned from FilterNodeAddressWasAdded and is used to iterate over the raw logs and unpacked data for NodeAddressWasAdded events raised by the ValidatorService contract.
type ValidatorServiceNodeAddressWasAddedIterator struct {
	Event *ValidatorServiceNodeAddressWasAdded // Event containing the contract specifics and raw log

	contract *bind.BoundContract // Generic contract to use for unpacking event data
	event    string              // Event name to use for unpacking event data

	logs chan types.Log        // Log channel receiving the found contract events
	sub  ethereum.Subscription // Subscription for errors, completion and termination
	done bool                  // Whether the subscription completed delivering logs
	fail error                 // Occurred error to stop iteration
}

// Next advances the iterator to the subsequent event, returning whether there
// are any more events found. In case of a retrieval or parsing error, false is
// returned and Error() can be queried for the exact failure.
func (it *ValidatorServiceNodeAddressWasAddedIterator) Next() bool {
	// If the iterator failed, stop iterating
	if it.fail != nil {
		return false
	}
	// If the iterator completed, deliver directly whatever's available
	if it.done {
		select {
		case log := <-it.logs:
			it.Event = new(ValidatorServiceNodeAddressWasAdded)
			if err := it.contract.UnpackLog(it.Event, it.event, log); err != nil {
				it.fail = err
				return false
			}
			it.Event.Raw = log
			return true

		default:
			return false
		}
	}
	// Iterator still in progress, wait for either a data or an error event
	select {
	case log := <-it.logs:
		it.Event = new(ValidatorServiceNodeAddressWasAdded)
		if err := it.contract.UnpackLog(it.Event, it.event, log); err != nil {
			it.fail = err
			return false
		}
		it.Event.Raw = log
		return true

	case err := <-it.sub.Err():
		it.done = true
		it.fail = err
		return it.Next()
	}
}

// Error returns any retrieval or parsing error occurred during filtering.
func (it *ValidatorServiceNodeAddressWasAddedIterator) Error() error {
	return it.fail
}

// Close terminates the iteration process, releasing any pending underlying
// resources.
func (it *ValidatorServiceNodeAddressWasAddedIterator) Close() error {
	it.sub.Unsubscribe()
	return nil
}

// ValidatorServiceNodeAddressWasAdded represents a NodeAddressWasAdded event raised by the ValidatorService contract.
type ValidatorServiceNodeAddressWasAdded struct {
	ValidatorId *big.Int
	NodeAddress common.Address
	Raw         types.Log // Blockchain specific contextual infos
}

// FilterNodeAddressWasAdded is a free log retrieval operation binding the contract event 0xa14268bedb4efdc41530188f4a7cbeb2df7644eba551d50504ca31c86fff7931.
//
// Solidity: event NodeAddressWasAdded(uint256 validatorId, address nodeAddress)
func (_ValidatorService *ValidatorServiceFilterer) FilterNodeAddressWasAdded(opts *bind.FilterOpts) (*ValidatorServiceNodeAddressWasAddedIterator, error) {

	logs, sub, err := _ValidatorService.contract.FilterLogs(opts, "NodeAddressWasAdded")
	if err != nil {
		return nil, err
	}
	return &ValidatorServiceNodeAddressWasAddedIterator{contract: _ValidatorService.contract, event: "NodeAddressWasAdded", logs: logs, sub: sub}, nil
}

// WatchNodeAddressWasAdded is a free log subscription operation binding the contract event 0xa14268bedb4efdc41530188f4a7cbeb2df7644eba551d50504ca31c86fff7931.
//
// Solidity: event NodeAddressWasAdded(uint256 validatorId, address nodeAddress)
func (_ValidatorService *ValidatorServiceFilterer) WatchNodeAddressWasAdded(opts *bind.WatchOpts, sink chan<- *ValidatorServiceNodeAddressWasAdded) (event.Subscription, error) {

	logs, sub, err := _ValidatorService.contract.WatchLogs(opts, "NodeAddressWasAdded")
	if err != nil {
		return nil, err
	}
	return event.NewSubscription(func(quit <-chan struct{}) error {
		defer sub.Unsubscribe()
		for {
			select {
			case log := <-logs:
				// New log arrived, parse the event and forward to the user
				event := new(ValidatorServiceNodeAddressWasAdded)
				if err := _ValidatorService.contract.UnpackLog(event, "NodeAddressWasAdded", log); err != nil {
					return err
				}
				event.Raw = log

				select {
				case sink <- event:
				case err := <-sub.Err():
					return err
				case <-quit:
					return nil
				}
			case err := <-sub.Err():
				return err
			case <-quit:
				return nil
			}
		}
	}), nil
}

// ParseNodeAddressWasAdded is a log parse operation binding the contract event 0xa14268bedb4efdc41530188f4a7cbeb2df7644eba551d50504ca31c86fff7931.
//
// Solidity: event NodeAddressWasAdded(uint256 validatorId, address nodeAddress)
func (_ValidatorService *ValidatorServiceFilterer) ParseNodeAddressWasAdded(log types.Log) (*ValidatorServiceNodeAddressWasAdded, error) {
	event := new(ValidatorServiceNodeAddressWasAdded)
	if err := _ValidatorService.contract.UnpackLog(event, "NodeAddressWasAdded", log); err != nil {
		return nil, err
	}
	return event, nil
}

// ValidatorServiceNodeAddressWasRemovedIterator is returned from FilterNodeAddressWasRemoved and is used to iterate over the raw logs and unpacked data for NodeAddressWasRemoved events raised by the ValidatorService contract.
type ValidatorServiceNodeAddressWasRemovedIterator struct {
	Event *ValidatorServiceNodeAddressWasRemoved // Event containing the contract specifics and raw log

	contract *bind.BoundContract // Generic contract to use for unpacking event data
	event    string              // Event name to use for unpacking event data

	logs chan types.Log        // Log channel receiving the found contract events
	sub  ethereum.Subscription // Subscription for errors, completion and termination
	done bool                  // Whether the subscription completed delivering logs
	fail error                 // Occurred error to stop iteration
}

// Next advances the iterator to the subsequent event, returning whether there
// are any more events found. In case of a retrieval or parsing error, false is
// returned and Error() can be queried for the exact failure.
func (it *ValidatorServiceNodeAddressWasRemovedIterator) Next() bool {
	// If the iterator failed, stop iterating
	if it.fail != nil {
		return false
	}
	// If the iterator completed, deliver directly whatever's available
	if it.done {
		select {
		case log := <-it.logs:
			it.Event = new(ValidatorServiceNodeAddressWasRemoved)
			if err := it.contract.UnpackLog(it.Event, it.event, log); err != nil {
				it.fail = err
				return false
			}
			it.Event.Raw = log
			return true

		default:
			return false
		}
	}
	// Iterator still in progress, wait for either a data or an error event
	select {
	case log := <-it.logs:
		it.Event = new(ValidatorServiceNodeAddressWasRemoved)
		if err := it.contract.UnpackLog(it.Event, it.event, log); err != nil {
			it.fail = err
			return false
		}
		it.Event.Raw = log
		return true

	case err := <-it.sub.Err():
		it.done = true
		it.fail = err
		return it.Next()
	}
}

// Error returns any retrieval or parsing error occurred during filtering.
func (it *ValidatorServiceNodeAddressWasRemovedIterator) Error() error {
	return it.fail
}

// Close terminates the iteration process, releasing any pending underlying
// resources.
func (it *ValidatorServiceNodeAddressWasRemovedIterator) Close() error {
	it.sub.Unsubscribe()
	return nil
}

// ValidatorServiceNodeAddressWasRemoved represents a NodeAddressWasRemoved event raised by the ValidatorService contract.
type ValidatorServiceNodeAddressWasRemoved struct {
	ValidatorId *big.Int
	NodeAddress common.Address
	Raw         types.Log // Blockchain specific contextual infos
}

// FilterNodeAddressWasRemoved is a free log retrieval operation binding the contract event 0xafa229b1d91fef1b7e952744b5504745de9616d7ef081a95b6abbf091a00e5f1.
//
// Solidity: event NodeAddressWasRemoved(uint256 validatorId, address nodeAddress)
func (_ValidatorService *ValidatorServiceFilterer) FilterNodeAddressWasRemoved(opts *bind.FilterOpts) (*ValidatorServiceNodeAddressWasRemovedIterator, error) {

	logs, sub, err := _ValidatorService.contract.FilterLogs(opts, "NodeAddressWasRemoved")
	if err != nil {
		return nil, err
	}
	return &ValidatorServiceNodeAddressWasRemovedIterator{contract: _ValidatorService.contract, event: "NodeAddressWasRemoved", logs: logs, sub: sub}, nil
}

// WatchNodeAddressWasRemoved is a free log subscription operation binding the contract event 0xafa229b1d91fef1b7e952744b5504745de9616d7ef081a95b6abbf091a00e5f1.
//
// Solidity: event NodeAddressWasRemoved(uint256 validatorId, address nodeAddress)
func (_ValidatorService *ValidatorServiceFilterer) WatchNodeAddressWasRemoved(opts *bind.WatchOpts, sink chan<- *ValidatorServiceNodeAddressWasRemoved) (event.Subscription, error) {

	logs, sub, err := _ValidatorService.contract.WatchLogs(opts, "NodeAddressWasRemoved")
	if err != nil {
		return nil, err
	}
	return event.NewSubscription(func(quit <-chan struct{}) error {
		defer sub.Unsubscribe()
		for {
			select {
			case log := <-logs:
				// New log arrived, parse the event and forward to the user
				event := new(ValidatorServiceNodeAddressWasRemoved)
				if err := _ValidatorService.contract.UnpackLog(event, "NodeAddressWasRemoved", log); err != nil {
					return err
				}
				event.Raw = log

				select {
				case sink <- event:
				case err := <-sub.Err():
					return err
				case <-quit:
					return nil
				}
			case err := <-sub.Err():
				return err
			case <-quit:
				return nil
			}
		}
	}), nil
}

// ParseNodeAddressWasRemoved is a log parse operation binding the contract event 0xafa229b1d91fef1b7e952744b5504745de9616d7ef081a95b6abbf091a00e5f1.
//
// Solidity: event NodeAddressWasRemoved(uint256 validatorId, address nodeAddress)
func (_ValidatorService *ValidatorServiceFilterer) ParseNodeAddressWasRemoved(log types.Log) (*ValidatorServiceNodeAddressWasRemoved, error) {
	event := new(ValidatorServiceNodeAddressWasRemoved)
	if err := _ValidatorService.contract.UnpackLog(event, "NodeAddressWasRemoved", log); err != nil {
		return nil, err
	}
	return event, nil
}

// ValidatorServiceRoleGrantedIterator is returned from FilterRoleGranted and is used to iterate over the raw logs and unpacked data for RoleGranted events raised by the ValidatorService contract.
type ValidatorServiceRoleGrantedIterator struct {
	Event *ValidatorServiceRoleGranted // Event containing the contract specifics and raw log

	contract *bind.BoundContract // Generic contract to use for unpacking event data
	event    string              // Event name to use for unpacking event data

	logs chan types.Log        // Log channel receiving the found contract events
	sub  ethereum.Subscription // Subscription for errors, completion and termination
	done bool                  // Whether the subscription completed delivering logs
	fail error                 // Occurred error to stop iteration
}

// Next advances the iterator to the subsequent event, returning whether there
// are any more events found. In case of a retrieval or parsing error, false is
// returned and Error() can be queried for the exact failure.
func (it *ValidatorServiceRoleGrantedIterator) Next() bool {
	// If the iterator failed, stop iterating
	if it.fail != nil {
		return false
	}
	// If the iterator completed, deliver directly whatever's available
	if it.done {
		select {
		case log := <-it.logs:
			it.Event = new(ValidatorServiceRoleGranted)
			if err := it.contract.UnpackLog(it.Event, it.event, log); err != nil {
				it.fail = err
				return false
			}
			it.Event.Raw = log
			return true

		default:
			return false
		}
	}
	// Iterator still in progress, wait for either a data or an error event
	select {
	case log := <-it.logs:
		it.Event = new(ValidatorServiceRoleGranted)
		if err := it.contract.UnpackLog(it.Event, it.event, log); err != nil {
			it.fail = err
			return false
		}
		it.Event.Raw = log
		return true

	case err := <-it.sub.Err():
		it.done = true
		it.fail = err
		return it.Next()
	}
}

// Error returns any retrieval or parsing error occurred during filtering.
func (it *ValidatorServiceRoleGrantedIterator) Error() error {
	return it.fail
}

// Close terminates the iteration process, releasing any pending underlying
// resources.
func (it *ValidatorServiceRoleGrantedIterator) Close() error {
	it.sub.Unsubscribe()
	return nil
}

// ValidatorServiceRoleGranted represents a RoleGranted event raised by the ValidatorService contract.
type ValidatorServiceRoleGranted struct {
	Role    [32]byte
	Account common.Address
	Sender  common.Address
	Raw     types.Log // Blockchain specific contextual infos
}

// FilterRoleGranted is a free log retrieval operation binding the contract event 0x2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d.
//
// Solidity: event RoleGranted(bytes32 indexed role, address indexed account, address indexed sender)
func (_ValidatorService *ValidatorServiceFilterer) FilterRoleGranted(opts *bind.FilterOpts, role [][32]byte, account []common.Address, sender []common.Address) (*ValidatorServiceRoleGrantedIterator, error) {

	var roleRule []interface{}
	for _, roleItem := range role {
		roleRule = append(roleRule, roleItem)
	}
	var accountRule []interface{}
	for _, accountItem := range account {
		accountRule = append(accountRule, accountItem)
	}
	var senderRule []interface{}
	for _, senderItem := range sender {
		senderRule = append(senderRule, senderItem)
	}

	logs, sub, err := _ValidatorService.contract.FilterLogs(opts, "RoleGranted", roleRule, accountRule, senderRule)
	if err != nil {
		return nil, err
	}
	return &ValidatorServiceRoleGrantedIterator{contract: _ValidatorService.contract, event: "RoleGranted", logs: logs, sub: sub}, nil
}

// WatchRoleGranted is a free log subscription operation binding the contract event 0x2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d.
//
// Solidity: event RoleGranted(bytes32 indexed role, address indexed account, address indexed sender)
func (_ValidatorService *ValidatorServiceFilterer) WatchRoleGranted(opts *bind.WatchOpts, sink chan<- *ValidatorServiceRoleGranted, role [][32]byte, account []common.Address, sender []common.Address) (event.Subscription, error) {

	var roleRule []interface{}
	for _, roleItem := range role {
		roleRule = append(roleRule, roleItem)
	}
	var accountRule []interface{}
	for _, accountItem := range account {
		accountRule = append(accountRule, accountItem)
	}
	var senderRule []interface{}
	for _, senderItem := range sender {
		senderRule = append(senderRule, senderItem)
	}

	logs, sub, err := _ValidatorService.contract.WatchLogs(opts, "RoleGranted", roleRule, accountRule, senderRule)
	if err != nil {
		return nil, err
	}
	return event.NewSubscription(func(quit <-chan struct{}) error {
		defer sub.Unsubscribe()
		for {
			select {
			case log := <-logs:
				// New log arrived, parse the event and forward to the user
				event := new(ValidatorServiceRoleGranted)
				if err := _ValidatorService.contract.UnpackLog(event, "RoleGranted", log); err != nil {
					return err
				}
				event.Raw = log

				select {
				case sink <- event:
				case err := <-sub.Err():
					return err
				case <-quit:
					return nil
				}
			case err := <-sub.Err():
				return err
			case <-quit:
				return nil
			}
		}
	}), nil
}

// ParseRoleGranted is a log parse operation binding the contract event 0x2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d.
//
// Solidity: event RoleGranted(bytes32 indexed role, address indexed account, address indexed sender)
func (_ValidatorService *ValidatorServiceFilterer) ParseRoleGranted(log types.Log) (*ValidatorServiceRoleGranted, error) {
	event := new(ValidatorServiceRoleGranted)
	if err := _ValidatorService.contract.UnpackLog(event, "RoleGranted", log); err != nil {
		return nil, err
	}
	return event, nil
}

// ValidatorServiceRoleRevokedIterator is returned from FilterRoleRevoked and is used to iterate over the raw logs and unpacked data for RoleRevoked events raised by the ValidatorService contract.
type ValidatorServiceRoleRevokedIterator struct {
	Event *ValidatorServiceRoleRevoked // Event containing the contract specifics and raw log

	contract *bind.BoundContract // Generic contract to use for unpacking event data
	event    string              // Event name to use for unpacking event data

	logs chan types.Log        // Log channel receiving the found contract events
	sub  ethereum.Subscription // Subscription for errors, completion and termination
	done bool                  // Whether the subscription completed delivering logs
	fail error                 // Occurred error to stop iteration
}

// Next advances the iterator to the subsequent event, returning whether there
// are any more events found. In case of a retrieval or parsing error, false is
// returned and Error() can be queried for the exact failure.
func (it *ValidatorServiceRoleRevokedIterator) Next() bool {
	// If the iterator failed, stop iterating
	if it.fail != nil {
		return false
	}
	// If the iterator completed, deliver directly whatever's available
	if it.done {
		select {
		case log := <-it.logs:
			it.Event = new(ValidatorServiceRoleRevoked)
			if err := it.contract.UnpackLog(it.Event, it.event, log); err != nil {
				it.fail = err
				return false
			}
			it.Event.Raw = log
			return true

		default:
			return false
		}
	}
	// Iterator still in progress, wait for either a data or an error event
	select {
	case log := <-it.logs:
		it.Event = new(ValidatorServiceRoleRevoked)
		if err := it.contract.UnpackLog(it.Event, it.event, log); err != nil {
			it.fail = err
			return false
		}
		it.Event.Raw = log
		return true

	case err := <-it.sub.Err():
		it.done = true
		it.fail = err
		return it.Next()
	}
}

// Error returns any retrieval or parsing error occurred during filtering.
func (it *ValidatorServiceRoleRevokedIterator) Error() error {
	return it.fail
}

// Close terminates the iteration process, releasing any pending underlying
// resources.
func (it *ValidatorServiceRoleRevokedIterator) Close() error {
	it.sub.Unsubscribe()
	return nil
}

// ValidatorServiceRoleRevoked represents a RoleRevoked event raised by the ValidatorService contract.
type ValidatorServiceRoleRevoked struct {
	Role    [32]byte
	Account common.Address
	Sender  common.Address
	Raw     types.Log // Blockchain specific contextual infos
}

// FilterRoleRevoked is a free log retrieval operation binding the contract event 0xf6391f5c32d9c69d2a47ea670b442974b53935d1edc7fd64eb21e047a839171b.
//
// Solidity: event RoleRevoked(bytes32 indexed role, address indexed account, address indexed sender)
func (_ValidatorService *ValidatorServiceFilterer) FilterRoleRevoked(opts *bind.FilterOpts, role [][32]byte, account []common.Address, sender []common.Address) (*ValidatorServiceRoleRevokedIterator, error) {

	var roleRule []interface{}
	for _, roleItem := range role {
		roleRule = append(roleRule, roleItem)
	}
	var accountRule []interface{}
	for _, accountItem := range account {
		accountRule = append(accountRule, accountItem)
	}
	var senderRule []interface{}
	for _, senderItem := range sender {
		senderRule = append(senderRule, senderItem)
	}

	logs, sub, err := _ValidatorService.contract.FilterLogs(opts, "RoleRevoked", roleRule, accountRule, senderRule)
	if err != nil {
		return nil, err
	}
	return &ValidatorServiceRoleRevokedIterator{contract: _ValidatorService.contract, event: "RoleRevoked", logs: logs, sub: sub}, nil
}

// WatchRoleRevoked is a free log subscription operation binding the contract event 0xf6391f5c32d9c69d2a47ea670b442974b53935d1edc7fd64eb21e047a839171b.
//
// Solidity: event RoleRevoked(bytes32 indexed role, address indexed account, address indexed sender)
func (_ValidatorService *ValidatorServiceFilterer) WatchRoleRevoked(opts *bind.WatchOpts, sink chan<- *ValidatorServiceRoleRevoked, role [][32]byte, account []common.Address, sender []common.Address) (event.Subscription, error) {

	var roleRule []interface{}
	for _, roleItem := range role {
		roleRule = append(roleRule, roleItem)
	}
	var accountRule []interface{}
	for _, accountItem := range account {
		accountRule = append(accountRule, accountItem)
	}
	var senderRule []interface{}
	for _, senderItem := range sender {
		senderRule = append(senderRule, senderItem)
	}

	logs, sub, err := _ValidatorService.contract.WatchLogs(opts, "RoleRevoked", roleRule, accountRule, senderRule)
	if err != nil {
		return nil, err
	}
	return event.NewSubscription(func(quit <-chan struct{}) error {
		defer sub.Unsubscribe()
		for {
			select {
			case log := <-logs:
				// New log arrived, parse the event and forward to the user
				event := new(ValidatorServiceRoleRevoked)
				if err := _ValidatorService.contract.UnpackLog(event, "RoleRevoked", log); err != nil {
					return err
				}
				event.Raw = log

				select {
				case sink <- event:
				case err := <-sub.Err():
					return err
				case <-quit:
					return nil
				}
			case err := <-sub.Err():
				return err
			case <-quit:
				return nil
			}
		}
	}), nil
}

// ParseRoleRevoked is a log parse operation binding the contract event 0xf6391f5c32d9c69d2a47ea670b442974b53935d1edc7fd64eb21e047a839171b.
//
// Solidity: event RoleRevoked(bytes32 indexed role, address indexed account, address indexed sender)
func (_ValidatorService *ValidatorServiceFilterer) ParseRoleRevoked(log types.Log) (*ValidatorServiceRoleRevoked, error) {
	event := new(ValidatorServiceRoleRevoked)
	if err := _ValidatorService.contract.UnpackLog(event, "RoleRevoked", log); err != nil {
		return nil, err
	}
	return event, nil
}

// ValidatorServiceValidatorAddressChangedIterator is returned from FilterValidatorAddressChanged and is used to iterate over the raw logs and unpacked data for ValidatorAddressChanged events raised by the ValidatorService contract.
type ValidatorServiceValidatorAddressChangedIterator struct {
	Event *ValidatorServiceValidatorAddressChanged // Event containing the contract specifics and raw log

	contract *bind.BoundContract // Generic contract to use for unpacking event data
	event    string              // Event name to use for unpacking event data

	logs chan types.Log        // Log channel receiving the found contract events
	sub  ethereum.Subscription // Subscription for errors, completion and termination
	done bool                  // Whether the subscription completed delivering logs
	fail error                 // Occurred error to stop iteration
}

// Next advances the iterator to the subsequent event, returning whether there
// are any more events found. In case of a retrieval or parsing error, false is
// returned and Error() can be queried for the exact failure.
func (it *ValidatorServiceValidatorAddressChangedIterator) Next() bool {
	// If the iterator failed, stop iterating
	if it.fail != nil {
		return false
	}
	// If the iterator completed, deliver directly whatever's available
	if it.done {
		select {
		case log := <-it.logs:
			it.Event = new(ValidatorServiceValidatorAddressChanged)
			if err := it.contract.UnpackLog(it.Event, it.event, log); err != nil {
				it.fail = err
				return false
			}
			it.Event.Raw = log
			return true

		default:
			return false
		}
	}
	// Iterator still in progress, wait for either a data or an error event
	select {
	case log := <-it.logs:
		it.Event = new(ValidatorServiceValidatorAddressChanged)
		if err := it.contract.UnpackLog(it.Event, it.event, log); err != nil {
			it.fail = err
			return false
		}
		it.Event.Raw = log
		return true

	case err := <-it.sub.Err():
		it.done = true
		it.fail = err
		return it.Next()
	}
}

// Error returns any retrieval or parsing error occurred during filtering.
func (it *ValidatorServiceValidatorAddressChangedIterator) Error() error {
	return it.fail
}

// Close terminates the iteration process, releasing any pending underlying
// resources.
func (it *ValidatorServiceValidatorAddressChangedIterator) Close() error {
	it.sub.Unsubscribe()
	return nil
}

// ValidatorServiceValidatorAddressChanged represents a ValidatorAddressChanged event raised by the ValidatorService contract.
type ValidatorServiceValidatorAddressChanged struct {
	ValidatorId *big.Int
	NewAddress  common.Address
	Raw         types.Log // Blockchain specific contextual infos
}

// FilterValidatorAddressChanged is a free log retrieval operation binding the contract event 0x9fe443dfd97eb75800b1e19c356677bca2625789663d07eed1c2c0dbe5488f3c.
//
// Solidity: event ValidatorAddressChanged(uint256 validatorId, address newAddress)
func (_ValidatorService *ValidatorServiceFilterer) FilterValidatorAddressChanged(opts *bind.FilterOpts) (*ValidatorServiceValidatorAddressChangedIterator, error) {

	logs, sub, err := _ValidatorService.contract.FilterLogs(opts, "ValidatorAddressChanged")
	if err != nil {
		return nil, err
	}
	return &ValidatorServiceValidatorAddressChangedIterator{contract: _ValidatorService.contract, event: "ValidatorAddressChanged", logs: logs, sub: sub}, nil
}

// WatchValidatorAddressChanged is a free log subscription operation binding the contract event 0x9fe443dfd97eb75800b1e19c356677bca2625789663d07eed1c2c0dbe5488f3c.
//
// Solidity: event ValidatorAddressChanged(uint256 validatorId, address newAddress)
func (_ValidatorService *ValidatorServiceFilterer) WatchValidatorAddressChanged(opts *bind.WatchOpts, sink chan<- *ValidatorServiceValidatorAddressChanged) (event.Subscription, error) {

	logs, sub, err := _ValidatorService.contract.WatchLogs(opts, "ValidatorAddressChanged")
	if err != nil {
		return nil, err
	}
	return event.NewSubscription(func(quit <-chan struct{}) error {
		defer sub.Unsubscribe()
		for {
			select {
			case log := <-logs:
				// New log arrived, parse the event and forward to the user
				event := new(ValidatorServiceValidatorAddressChanged)
				if err := _ValidatorService.contract.UnpackLog(event, "ValidatorAddressChanged", log); err != nil {
					return err
				}
				event.Raw = log

				select {
				case sink <- event:
				case err := <-sub.Err():
					return err
				case <-quit:
					return nil
				}
			case err := <-sub.Err():
				return err
			case <-quit:
				return nil
			}
		}
	}), nil
}

// ParseValidatorAddressChanged is a log parse operation binding the contract event 0x9fe443dfd97eb75800b1e19c356677bca2625789663d07eed1c2c0dbe5488f3c.
//
// Solidity: event ValidatorAddressChanged(uint256 validatorId, address newAddress)
func (_ValidatorService *ValidatorServiceFilterer) ParseValidatorAddressChanged(log types.Log) (*ValidatorServiceValidatorAddressChanged, error) {
	event := new(ValidatorServiceValidatorAddressChanged)
	if err := _ValidatorService.contract.UnpackLog(event, "ValidatorAddressChanged", log); err != nil {
		return nil, err
	}
	return event, nil
}

// ValidatorServiceValidatorRegisteredIterator is returned from FilterValidatorRegistered and is used to iterate over the raw logs and unpacked data for ValidatorRegistered events raised by the ValidatorService contract.
type ValidatorServiceValidatorRegisteredIterator struct {
	Event *ValidatorServiceValidatorRegistered // Event containing the contract specifics and raw log

	contract *bind.BoundContract // Generic contract to use for unpacking event data
	event    string              // Event name to use for unpacking event data

	logs chan types.Log        // Log channel receiving the found contract events
	sub  ethereum.Subscription // Subscription for errors, completion and termination
	done bool                  // Whether the subscription completed delivering logs
	fail error                 // Occurred error to stop iteration
}

// Next advances the iterator to the subsequent event, returning whether there
// are any more events found. In case of a retrieval or parsing error, false is
// returned and Error() can be queried for the exact failure.
func (it *ValidatorServiceValidatorRegisteredIterator) Next() bool {
	// If the iterator failed, stop iterating
	if it.fail != nil {
		return false
	}
	// If the iterator completed, deliver directly whatever's available
	if it.done {
		select {
		case log := <-it.logs:
			it.Event = new(ValidatorServiceValidatorRegistered)
			if err := it.contract.UnpackLog(it.Event, it.event, log); err != nil {
				it.fail = err
				return false
			}
			it.Event.Raw = log
			return true

		default:
			return false
		}
	}
	// Iterator still in progress, wait for either a data or an error event
	select {
	case log := <-it.logs:
		it.Event = new(ValidatorServiceValidatorRegistered)
		if err := it.contract.UnpackLog(it.Event, it.event, log); err != nil {
			it.fail = err
			return false
		}
		it.Event.Raw = log
		return true

	case err := <-it.sub.Err():
		it.done = true
		it.fail = err
		return it.Next()
	}
}

// Error returns any retrieval or parsing error occurred during filtering.
func (it *ValidatorServiceValidatorRegisteredIterator) Error() error {
	return it.fail
}

// Close terminates the iteration process, releasing any pending underlying
// resources.
func (it *ValidatorServiceValidatorRegisteredIterator) Close() error {
	it.sub.Unsubscribe()
	return nil
}

// ValidatorServiceValidatorRegistered represents a ValidatorRegistered event raised by the ValidatorService contract.
type ValidatorServiceValidatorRegistered struct {
	ValidatorId *big.Int
	Raw         types.Log // Blockchain specific contextual infos
}

// FilterValidatorRegistered is a free log retrieval operation binding the contract event 0x4013ba65fee075e87ceec32f5b3568314dfcbe8b3aaeb445c76e77823b790c6f.
//
// Solidity: event ValidatorRegistered(uint256 validatorId)
func (_ValidatorService *ValidatorServiceFilterer) FilterValidatorRegistered(opts *bind.FilterOpts) (*ValidatorServiceValidatorRegisteredIterator, error) {

	logs, sub, err := _ValidatorService.contract.FilterLogs(opts, "ValidatorRegistered")
	if err != nil {
		return nil, err
	}
	return &ValidatorServiceValidatorRegisteredIterator{contract: _ValidatorService.contract, event: "ValidatorRegistered", logs: logs, sub: sub}, nil
}

// WatchValidatorRegistered is a free log subscription operation binding the contract event 0x4013ba65fee075e87ceec32f5b3568314dfcbe8b3aaeb445c76e77823b790c6f.
//
// Solidity: event ValidatorRegistered(uint256 validatorId)
func (_ValidatorService *ValidatorServiceFilterer) WatchValidatorRegistered(opts *bind.WatchOpts, sink chan<- *ValidatorServiceValidatorRegistered) (event.Subscription, error) {

	logs, sub, err := _ValidatorService.contract.WatchLogs(opts, "ValidatorRegistered")
	if err != nil {
		return nil, err
	}
	return event.NewSubscription(func(quit <-chan struct{}) error {
		defer sub.Unsubscribe()
		for {
			select {
			case log := <-logs:
				// New log arrived, parse the event and forward to the user
				event := new(ValidatorServiceValidatorRegistered)
				if err := _ValidatorService.contract.UnpackLog(event, "ValidatorRegistered", log); err != nil {
					return err
				}
				event.Raw = log

				select {
				case sink <- event:
				case err := <-sub.Err():
					return err
				case <-quit:
					return nil
				}
			case err := <-sub.Err():
				return err
			case <-quit:
				return nil
			}
		}
	}), nil
}

// ParseValidatorRegistered is a log parse operation binding the contract event 0x4013ba65fee075e87ceec32f5b3568314dfcbe8b3aaeb445c76e77823b790c6f.
//
// Solidity: event ValidatorRegistered(uint256 validatorId)
func (_ValidatorService *ValidatorServiceFilterer) ParseValidatorRegistered(log types.Log) (*ValidatorServiceValidatorRegistered, error) {
	event := new(ValidatorServiceValidatorRegistered)
	if err := _ValidatorService.contract.UnpackLog(event, "ValidatorRegistered", log); err != nil {
		return nil, err
	}
	return event, nil
}

// ValidatorServiceValidatorWasDisabledIterator is returned from FilterValidatorWasDisabled and is used to iterate over the raw logs and unpacked data for ValidatorWasDisabled events raised by the ValidatorService contract.
type ValidatorServiceValidatorWasDisabledIterator struct {
	Event *ValidatorServiceValidatorWasDisabled // Event containing the contract specifics and raw log

	contract *bind.BoundContract // Generic contract to use for unpacking event data
	event    string              // Event name to use for unpacking event data

	logs chan types.Log        // Log channel receiving the found contract events
	sub  ethereum.Subscription // Subscription for errors, completion and termination
	done bool                  // Whether the subscription completed delivering logs
	fail error                 // Occurred error to stop iteration
}

// Next advances the iterator to the subsequent event, returning whether there
// are any more events found. In case of a retrieval or parsing error, false is
// returned and Error() can be queried for the exact failure.
func (it *ValidatorServiceValidatorWasDisabledIterator) Next() bool {
	// If the iterator failed, stop iterating
	if it.fail != nil {
		return false
	}
	// If the iterator completed, deliver directly whatever's available
	if it.done {
		select {
		case log := <-it.logs:
			it.Event = new(ValidatorServiceValidatorWasDisabled)
			if err := it.contract.UnpackLog(it.Event, it.event, log); err != nil {
				it.fail = err
				return false
			}
			it.Event.Raw = log
			return true

		default:
			return false
		}
	}
	// Iterator still in progress, wait for either a data or an error event
	select {
	case log := <-it.logs:
		it.Event = new(ValidatorServiceValidatorWasDisabled)
		if err := it.contract.UnpackLog(it.Event, it.event, log); err != nil {
			it.fail = err
			return false
		}
		it.Event.Raw = log
		return true

	case err := <-it.sub.Err():
		it.done = true
		it.fail = err
		return it.Next()
	}
}

// Error returns any retrieval or parsing error occurred during filtering.
func (it *ValidatorServiceValidatorWasDisabledIterator) Error() error {
	return it.fail
}

// Close terminates the iteration process, releasing any pending underlying
// resources.
func (it *ValidatorServiceValidatorWasDisabledIterator) Close() error {
	it.sub.Unsubscribe()
	return nil
}

// ValidatorServiceValidatorWasDisabled represents a ValidatorWasDisabled event raised by the ValidatorService contract.
type ValidatorServiceValidatorWasDisabled struct {
	ValidatorId *big.Int
	Raw         types.Log // Blockchain specific contextual infos
}

// FilterValidatorWasDisabled is a free log retrieval operation binding the contract event 0xcf19fe3d2bddcf835796e65da48a848f1f55068c591e1739ce2f9a2037d86e17.
//
// Solidity: event ValidatorWasDisabled(uint256 validatorId)
func (_ValidatorService *ValidatorServiceFilterer) FilterValidatorWasDisabled(opts *bind.FilterOpts) (*ValidatorServiceValidatorWasDisabledIterator, error) {

	logs, sub, err := _ValidatorService.contract.FilterLogs(opts, "ValidatorWasDisabled")
	if err != nil {
		return nil, err
	}
	return &ValidatorServiceValidatorWasDisabledIterator{contract: _ValidatorService.contract, event: "ValidatorWasDisabled", logs: logs, sub: sub}, nil
}

// WatchValidatorWasDisabled is a free log subscription operation binding the contract event 0xcf19fe3d2bddcf835796e65da48a848f1f55068c591e1739ce2f9a2037d86e17.
//
// Solidity: event ValidatorWasDisabled(uint256 validatorId)
func (_ValidatorService *ValidatorServiceFilterer) WatchValidatorWasDisabled(opts *bind.WatchOpts, sink chan<- *ValidatorServiceValidatorWasDisabled) (event.Subscription, error) {

	logs, sub, err := _ValidatorService.contract.WatchLogs(opts, "ValidatorWasDisabled")
	if err != nil {
		return nil, err
	}
	return event.NewSubscription(func(quit <-chan struct{}) error {
		defer sub.Unsubscribe()
		for {
			select {
			case log := <-logs:
				// New log arrived, parse the event and forward to the user
				event := new(ValidatorServiceValidatorWasDisabled)
				if err := _ValidatorService.contract.UnpackLog(event, "ValidatorWasDisabled", log); err != nil {
					return err
				}
				event.Raw = log

				select {
				case sink <- event:
				case err := <-sub.Err():
					return err
				case <-quit:
					return nil
				}
			case err := <-sub.Err():
				return err
			case <-quit:
				return nil
			}
		}
	}), nil
}

// ParseValidatorWasDisabled is a log parse operation binding the contract event 0xcf19fe3d2bddcf835796e65da48a848f1f55068c591e1739ce2f9a2037d86e17.
//
// Solidity: event ValidatorWasDisabled(uint256 validatorId)
func (_ValidatorService *ValidatorServiceFilterer) ParseValidatorWasDisabled(log types.Log) (*ValidatorServiceValidatorWasDisabled, error) {
	event := new(ValidatorServiceValidatorWasDisabled)
	if err := _ValidatorService.contract.UnpackLog(event, "ValidatorWasDisabled", log); err != nil {
		return nil, err
	}
	return event, nil
}

// ValidatorServiceValidatorWasEnabledIterator is returned from FilterValidatorWasEnabled and is used to iterate over the raw logs and unpacked data for ValidatorWasEnabled events raised by the ValidatorService contract.
type ValidatorServiceValidatorWasEnabledIterator struct {
	Event *ValidatorServiceValidatorWasEnabled // Event containing the contract specifics and raw log

	contract *bind.BoundContract // Generic contract to use for unpacking event data
	event    string              // Event name to use for unpacking event data

	logs chan types.Log        // Log channel receiving the found contract events
	sub  ethereum.Subscription // Subscription for errors, completion and termination
	done bool                  // Whether the subscription completed delivering logs
	fail error                 // Occurred error to stop iteration
}

// Next advances the iterator to the subsequent event, returning whether there
// are any more events found. In case of a retrieval or parsing error, false is
// returned and Error() can be queried for the exact failure.
func (it *ValidatorServiceValidatorWasEnabledIterator) Next() bool {
	// If the iterator failed, stop iterating
	if it.fail != nil {
		return false
	}
	// If the iterator completed, deliver directly whatever's available
	if it.done {
		select {
		case log := <-it.logs:
			it.Event = new(ValidatorServiceValidatorWasEnabled)
			if err := it.contract.UnpackLog(it.Event, it.event, log); err != nil {
				it.fail = err
				return false
			}
			it.Event.Raw = log
			return true

		default:
			return false
		}
	}
	// Iterator still in progress, wait for either a data or an error event
	select {
	case log := <-it.logs:
		it.Event = new(ValidatorServiceValidatorWasEnabled)
		if err := it.contract.UnpackLog(it.Event, it.event, log); err != nil {
			it.fail = err
			return false
		}
		it.Event.Raw = log
		return true

	case err := <-it.sub.Err():
		it.done = true
		it.fail = err
		return it.Next()
	}
}

// Error returns any retrieval or parsing error occurred during filtering.
func (it *ValidatorServiceValidatorWasEnabledIterator) Error() error {
	return it.fail
}

// Close terminates the iteration process, releasing any pending underlying
// resources.
func (it *ValidatorServiceValidatorWasEnabledIterator) Close() error {
	it.sub.Unsubscribe()
	return nil
}

// ValidatorServiceValidatorWasEnabled represents a ValidatorWasEnabled event raised by the ValidatorService contract.
type ValidatorServiceValidatorWasEnabled struct {
	ValidatorId *big.Int
	Raw         types.Log // Blockchain specific contextual infos
}

// FilterValidatorWasEnabled is a free log retrieval operation binding the contract event 0x35f72fa856b7982df44607525004d95014aa9153928eab40bb222857d021a211.
//
// Solidity: event ValidatorWasEnabled(uint256 validatorId)
func (_ValidatorService *ValidatorServiceFilterer) FilterValidatorWasEnabled(opts *bind.FilterOpts) (*ValidatorServiceValidatorWasEnabledIterator, error) {

	logs, sub, err := _ValidatorService.contract.FilterLogs(opts, "ValidatorWasEnabled")
	if err != nil {
		return nil, err
	}
	return &ValidatorServiceValidatorWasEnabledIterator{contract: _ValidatorService.contract, event: "ValidatorWasEnabled", logs: logs, sub: sub}, nil
}

// WatchValidatorWasEnabled is a free log subscription operation binding the contract event 0x35f72fa856b7982df44607525004d95014aa9153928eab40bb222857d021a211.
//
// Solidity: event ValidatorWasEnabled(uint256 validatorId)
func (_ValidatorService *ValidatorServiceFilterer) WatchValidatorWasEnabled(opts *bind.WatchOpts, sink chan<- *ValidatorServiceValidatorWasEnabled) (event.Subscription, error) {

	logs, sub, err := _ValidatorService.contract.WatchLogs(opts, "ValidatorWasEnabled")
	if err != nil {
		return nil, err
	}
	return event.NewSubscription(func(quit <-chan struct{}) error {
		defer sub.Unsubscribe()
		for {
			select {
			case log := <-logs:
				// New log arrived, parse the event and forward to the user
				event := new(ValidatorServiceValidatorWasEnabled)
				if err := _ValidatorService.contract.UnpackLog(event, "ValidatorWasEnabled", log); err != nil {
					return err
				}
				event.Raw = log

				select {
				case sink <- event:
				case err := <-sub.Err():
					return err
				case <-quit:
					return nil
				}
			case err := <-sub.Err():
				return err
			case <-quit:
				return nil
			}
		}
	}), nil
}

// ParseValidatorWasEnabled is a log parse operation binding the contract event 0x35f72fa856b7982df44607525004d95014aa9153928eab40bb222857d021a211.
//
// Solidity: event ValidatorWasEnabled(uint256 validatorId)
func (_ValidatorService *ValidatorServiceFilterer) ParseValidatorWasEnabled(log types.Log) (*ValidatorServiceValidatorWasEnabled, error) {
	event := new(ValidatorServiceValidatorWasEnabled)
	if err := _ValidatorService.contract.UnpackLog(event, "ValidatorWasEnabled", log); err != nil {
		return nil, err
	}
	return event, nil
}
